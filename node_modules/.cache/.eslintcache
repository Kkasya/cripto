[{"J:\\js\\cripto\\src\\index.js":"1","J:\\js\\cripto\\src\\components\\app\\App.js":"2","J:\\js\\cripto\\src\\store\\index.js":"3","J:\\js\\cripto\\src\\components\\main\\Main.component.js":"4","J:\\js\\cripto\\src\\store\\assetReducer.js":"5","J:\\js\\cripto\\src\\common\\fetch.js":"6","J:\\js\\cripto\\src\\components\\main\\components\\Table.component.js":"7","J:\\js\\cripto\\src\\components\\main\\components\\ItemTable.component.js":"8","J:\\js\\cripto\\src\\common\\utils.js":"9","J:\\js\\cripto\\src\\components\\main\\components\\Pagination.component.js":"10","J:\\js\\cripto\\src\\store\\detailsReducer.js":"11","J:\\js\\cripto\\src\\components\\main\\components\\Chart.component.js":"12","J:\\js\\cripto\\src\\components\\main\\components\\Loader.component.js":"13","J:\\js\\cripto\\src\\components\\header\\Header.component.js":"14","J:\\js\\cripto\\src\\components\\wallet\\Wallet.component.js":"15","J:\\js\\cripto\\src\\store\\walletReducer.js":"16","J:\\js\\cripto\\src\\components\\wallet\\components\\TableWalletCurrency.component.js":"17","J:\\js\\cripto\\src\\components\\wallet\\components\\ItemTableWalletCurrency.js":"18","J:\\js\\cripto\\src\\components\\main\\components\\AddingCurrency.component.js":"19","J:\\js\\cripto\\src\\components\\currencyPage\\CurrencyPage.component.js":"20"},{"size":320,"mtime":1635173328008,"results":"21","hashOfConfig":"22"},{"size":1163,"mtime":1635492316884,"results":"23","hashOfConfig":"22"},{"size":536,"mtime":1635489981201,"results":"24","hashOfConfig":"22"},{"size":1055,"mtime":1635510150902,"results":"25","hashOfConfig":"22"},{"size":924,"mtime":1635511043324,"results":"26","hashOfConfig":"22"},{"size":1293,"mtime":1635511256750,"results":"27","hashOfConfig":"22"},{"size":642,"mtime":1635492522887,"results":"28","hashOfConfig":"22"},{"size":1368,"mtime":1635499884199,"results":"29","hashOfConfig":"22"},{"size":1356,"mtime":1635496923665,"results":"30","hashOfConfig":"22"},{"size":732,"mtime":1635496703065,"results":"31","hashOfConfig":"22"},{"size":598,"mtime":1635496655079,"results":"32","hashOfConfig":"22"},{"size":1253,"mtime":1635508342810,"results":"33","hashOfConfig":"22"},{"size":181,"mtime":1635265749115,"results":"34","hashOfConfig":"22"},{"size":2679,"mtime":1635511256726,"results":"35","hashOfConfig":"22"},{"size":1201,"mtime":1635497439870,"results":"36","hashOfConfig":"22"},{"size":2470,"mtime":1635502703541,"results":"37","hashOfConfig":"22"},{"size":889,"mtime":1635345685862,"results":"38","hashOfConfig":"22"},{"size":988,"mtime":1635497439839,"results":"39","hashOfConfig":"22"},{"size":2251,"mtime":1635499897890,"results":"40","hashOfConfig":"22"},{"size":3563,"mtime":1635510892367,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s2cxvp",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"J:\\js\\cripto\\src\\index.js",[],"J:\\js\\cripto\\src\\components\\app\\App.js",[],"J:\\js\\cripto\\src\\store\\index.js",[],"J:\\js\\cripto\\src\\components\\main\\Main.component.js",["85"],"import React, {useEffect} from 'react';\r\nimport {getCripto} from \"../../common/fetch\";\r\nimport TableCurrency from \"./components/Table.component\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PaginationBlock from \"./components/Pagination.component\";\r\nimport Loader from \"./components/Loader.component\";\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch();\r\n    const {assets, activePage, limit, isOpenAssets} = useSelector(state => state.assets);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('page', JSON.stringify(activePage ))\r\n        const interval = setInterval(() => dispatch(getCripto(activePage, limit)), 2000);\r\n        return () => clearInterval(interval);\r\n    }, [activePage, limit]);\r\n\r\n    return (\r\n        <div className=\"main main__content\">\r\n            {isOpenAssets ?\r\n                <>\r\n                    <TableCurrency assets={assets}/>\r\n                    <PaginationBlock/>\r\n                </>\r\n                :\r\n                <Loader/>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Main;","J:\\js\\cripto\\src\\store\\assetReducer.js",[],"J:\\js\\cripto\\src\\common\\fetch.js",[],"J:\\js\\cripto\\src\\components\\main\\components\\Table.component.js",[],"J:\\js\\cripto\\src\\components\\main\\components\\ItemTable.component.js",[],"J:\\js\\cripto\\src\\common\\utils.js",[],"J:\\js\\cripto\\src\\components\\main\\components\\Pagination.component.js",[],"J:\\js\\cripto\\src\\store\\detailsReducer.js",[],"J:\\js\\cripto\\src\\components\\main\\components\\Chart.component.js",[],"J:\\js\\cripto\\src\\components\\main\\components\\Loader.component.js",[],"J:\\js\\cripto\\src\\components\\header\\Header.component.js",["86","87","88"],"import React, {useEffect} from 'react';\r\nimport {Badge, ListGroup, Button} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {roundSeparateNumber} from \"../../common/utils\";\r\nimport {setIsOpenWallet} from \"../../store/walletReducer\";\r\nimport {getAllCripto, getCripto, getCurrentCripto} from \"../../common/fetch\";\r\n\r\nconst Header = () => {\r\n    const {allAssets} = useSelector(state => state.assets);\r\n    const popularCripto = allAssets.slice(0, 3);\r\n    const dispatch = useDispatch();\r\n    const {currency, changeWallet} = useSelector(state => state.wallet);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('currency', JSON.stringify(currency ))\r\n    }, [currency]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('changeWallet', JSON.stringify(changeWallet ))\r\n    }, [changeWallet]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('allAssets', JSON.stringify(allAssets ))\r\n    }, [allAssets]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => dispatch(getAllCripto()), 10000);\r\n        return () =>  clearInterval(interval);\r\n    }, []);\r\n\r\n    const summaryCurrency = () => {\r\n        let summary = 0;\r\n        [...currency].forEach((item) => {\r\n            summary += item.summary;\r\n        });\r\n        return summary;\r\n    };\r\n\r\n    const summary = summaryCurrency();\r\n\r\n    const changePercent = () => {\r\n        const prevSummary = summary === changeWallet ? changeWallet : summary - changeWallet;\r\n        return changeWallet ? (changeWallet * 100 / prevSummary).toFixed() : 0\r\n    };\r\n\r\n    const openWallet = () => {\r\n        dispatch(setIsOpenWallet(true));\r\n    };\r\n\r\n    return (\r\n        <div className=\"header header__content\">\r\n            {allAssets && <ListGroup horizontal className=\"popularCripto__content\">\r\n                {popularCripto.map((cripto) =>\r\n                    <ListGroup.Item className=\"border-0 popularCripto__item\" key={cripto.symbol}>\r\n                        <span className=\"popularCripto__name\">{cripto.name} ({cripto.symbol})</span>\r\n                        <Badge bg=\"primary\">${roundSeparateNumber(cripto.marketCapUsd)}</Badge>\r\n                    </ListGroup.Item>\r\n                )}\r\n            </ListGroup>}\r\n            <Button variant=\"info\" onClick={openWallet} className=\"wallet__info\">\r\n                <span>Wallet: </span>\r\n                <span>{roundSeparateNumber(summary)} USD </span>\r\n                <span>{changeWallet < 0 ? `-${roundSeparateNumber(changeWallet)}` : `+${roundSeparateNumber(changeWallet)}`}\r\n                ({changePercent()} %) </span>\r\n            </Button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","J:\\js\\cripto\\src\\components\\wallet\\Wallet.component.js",[],"J:\\js\\cripto\\src\\store\\walletReducer.js",[],"J:\\js\\cripto\\src\\components\\wallet\\components\\TableWalletCurrency.component.js",[],"J:\\js\\cripto\\src\\components\\wallet\\components\\ItemTableWalletCurrency.js",[],"J:\\js\\cripto\\src\\components\\main\\components\\AddingCurrency.component.js",[],"J:\\js\\cripto\\src\\components\\currencyPage\\CurrencyPage.component.js",["89"],"import React, {useEffect} from 'react';\r\nimport {getDateTime, roundSeparateNumber} from \"../../common/utils\";\r\nimport Chart from \"../main/components/Chart.component\";\r\nimport Loader from \"../main/components/Loader.component\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport { getCurrentCripto} from \"../../common/fetch\";\r\nimport {Badge, Button} from \"react-bootstrap\";\r\nimport {addCurrentCurrency, setIsOpenAddingWallet} from \"../../store/walletReducer\";\r\n\r\nconst CurrencyPage = () => {\r\n        const {allAssets} = useSelector(state => state.assets);\r\n        const {assets24h, details} = useSelector(state => state.details);\r\n        const {now, startDay, start24h, date} = getDateTime();\r\n        const {id} = useParams();\r\n        const dispatch = useDispatch();\r\n        const getAsset = () => {\r\n            return allAssets.find((item) => item.id === id);\r\n        };\r\n\r\n        const asset = getAsset();\r\n\r\n        useEffect(() => {\r\n            let interval1 = 0;\r\n            let interval2 = 0;\r\n            if(allAssets.length) {\r\n                 interval2 = setInterval(() => dispatch(getCurrentCripto(asset.id, start24h.getTime(), now.getTime())), 2000);\r\n                 interval1 = setInterval(() => dispatch(getCurrentCripto(asset.id, startDay, now.getTime(), true)), 2000);\r\n            }\r\n            return () => {\r\n                clearInterval(interval1);\r\n                clearInterval(interval2);\r\n            };\r\n        }, [id, allAssets]);\r\n\r\n        // useEffect(() => {\r\n        //     const interval = setInterval(() => dispatch(getAllCripto()), 2000);\r\n        //     return () => clearInterval(interval);\r\n        // }, []);\r\n\r\n        const openAddToWallet = () => {\r\n            dispatch(setIsOpenAddingWallet(true));\r\n            dispatch(addCurrentCurrency(asset));\r\n        };\r\n\r\n        return (\r\n            <div className=\"card__wrapper\">\r\n                {Object.keys(details).length  ?\r\n                    <div className=\"card__content\">\r\n                        <div className=\"card__info\">\r\n                            <img\r\n                                src={`https://assets.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`}\r\n                                alt=\"currency\"\r\n                                className=\"card__img\"/>\r\n                            <div className=\"card__data\">\r\n                                <span> {asset.name} ({asset.symbol})</span>\r\n                                <span>{date}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card__data\">\r\n                            <span>HIGH: ${roundSeparateNumber(details.max)}</span>\r\n                            <span>LOW: ${roundSeparateNumber(details.min)}</span>\r\n                            <span>AVERAGE: ${roundSeparateNumber(details.average)}</span>\r\n                        </div>\r\n                        <div className=\"card__data\">\r\n                            <span className=\"button button__add\"><Badge bg=\"info\" onClick={openAddToWallet}>+</Badge></span>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <Loader/>\r\n                }\r\n                <Chart assets24h={assets24h} max={details.max} min={details.min}/>\r\n                <Link to='/'>\r\n                    <div className=\"centeredBlock\"><Button>Back</Button></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n;\r\n\r\nexport default CurrencyPage;",{"ruleId":"90","severity":1,"message":"91","line":16,"column":8,"nodeType":"92","endLine":16,"endColumn":27,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":6,"column":23,"nodeType":"96","messageId":"97","endLine":6,"endColumn":32},{"ruleId":"94","severity":1,"message":"98","line":6,"column":34,"nodeType":"96","messageId":"97","endLine":6,"endColumn":50},{"ruleId":"90","severity":1,"message":"91","line":29,"column":8,"nodeType":"92","endLine":29,"endColumn":10,"suggestions":"99"},{"ruleId":"90","severity":1,"message":"100","line":34,"column":12,"nodeType":"92","endLine":34,"endColumn":27,"suggestions":"101"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["102"],"no-unused-vars","'getCripto' is defined but never used.","Identifier","unusedVar","'getCurrentCripto' is defined but never used.",["103"],"React Hook useEffect has missing dependencies: 'asset.id', 'dispatch', 'now', 'start24h', and 'startDay'. Either include them or remove the dependency array.",["104"],{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [activePage, dispatch, limit]",{"range":"111","text":"112"},"Update the dependencies array to be: [dispatch]",{"range":"113","text":"114"},"Update the dependencies array to be: [id, allAssets, dispatch, asset.id, start24h, now, startDay]",{"range":"115","text":"116"},[710,729],"[activePage, dispatch, limit]",[1117,1119],"[dispatch]",[1516,1531],"[id, allAssets, dispatch, asset.id, start24h, now, startDay]"]