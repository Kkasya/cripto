{"ast":null,"code":"const currency = JSON.parse(localStorage.getItem('currency')) || [];\nconst changeWallet = JSON.parse(localStorage.getItem('changeWallet')) || null;\nconst defaultState = {\n  currency: currency,\n  addedCurrency: {},\n  changeWallet: changeWallet,\n  isOpenAddingWallet: false,\n  isOpenWallet: false\n};\n\nconst walletReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case \"ADD_CURRENCY\":\n      return { ...state,\n        currency: [action.payload, ...[...state.currency].map(item => {\n          const index = state.currency.indexOf(action.payload);\n          console.log(index);\n\n          if (index !== -1 && item[index].price === action.payload.price) {\n            item.summary += action.payload.summary;\n            item.count += action.payload.count;\n          }\n\n          return item;\n        })],\n        changeWallet: action.payload.summary\n      };\n\n    case \"DELETE_CURRENT_CURRENCY\":\n      return { ...state,\n        changeWallet: -Number(action.payload.summary),\n        currency: [...state.currency].filter(item => item.id !== action.payload.id && item.price !== action.payload.priceUsd)\n      };\n\n    case \"ADD_CURRENT_CURRENCY\":\n      return { ...state,\n        addedCurrency: action.payload\n      };\n\n    case \"SET_IS_OPEN_ADDING_WALLET\":\n      return { ...state,\n        isOpenAddingWallet: action.payload\n      };\n\n    case \"SET_IS_OPEN_WALLET\":\n      return { ...state,\n        isOpenWallet: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst addCurrency = payload => ({\n  type: \"ADD_CURRENCY\",\n  payload\n});\n\nconst deleteCurrentCurrency = payload => ({\n  type: \"DELETE_CURRENT_CURRENCY\",\n  payload\n});\n\nconst addCurrentCurrency = payload => ({\n  type: \"ADD_CURRENT_CURRENCY\",\n  payload\n});\n\nconst setIsOpenAddingWallet = payload => ({\n  type: \"SET_IS_OPEN_ADDING_WALLET\",\n  payload\n});\n\nconst setIsOpenWallet = payload => ({\n  type: \"SET_IS_OPEN_WALLET\",\n  payload\n});\n\nexport default walletReducer;\nexport { addCurrency, deleteCurrentCurrency, addCurrentCurrency, setIsOpenAddingWallet, setIsOpenWallet };","map":{"version":3,"sources":["J:/js/cripto/src/store/walletReducer.js"],"names":["currency","JSON","parse","localStorage","getItem","changeWallet","defaultState","addedCurrency","isOpenAddingWallet","isOpenWallet","walletReducer","state","action","type","payload","map","item","index","indexOf","console","log","price","summary","count","Number","filter","id","priceUsd","addCurrency","deleteCurrentCurrency","addCurrentCurrency","setIsOpenAddingWallet","setIsOpenWallet"],"mappings":"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","sourcesContent":["const currency = JSON.parse(localStorage.getItem('currency')) || [];\r\nconst changeWallet = JSON.parse(localStorage.getItem('changeWallet')) || null;\r\n\r\nconst defaultState = {\r\n    currency: currency,\r\n    addedCurrency: {},\r\n    changeWallet: changeWallet,\r\n    isOpenAddingWallet: false,\r\n    isOpenWallet: false,\r\n};\r\n\r\nconst walletReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_CURRENCY\":\r\n            return {...state,\r\n                currency: [action.payload, ...[...state.currency].map((item) => {\r\n                    const index = state.currency.indexOf(action.payload);\r\n                    console.log(index)\r\n                    if ( index !== -1 &&item[index].price === action.payload.price) {\r\n                        item.summary += action.payload.summary;\r\n                        item.count += action.payload.count;\r\n                    }\r\n                    return item\r\n                })],\r\n                changeWallet: action.payload.summary};\r\n        case \"DELETE_CURRENT_CURRENCY\":\r\n            return {...state, changeWallet: -Number(action.payload.summary),\r\n                currency: [...state.currency].filter((item) =>\r\n                    item.id !== action.payload.id && item.price !== action.payload.priceUsd)};\r\n        case \"ADD_CURRENT_CURRENCY\":\r\n            return {...state, addedCurrency: action.payload};\r\n        case \"SET_IS_OPEN_ADDING_WALLET\":\r\n            return {...state, isOpenAddingWallet: action.payload};\r\n        case \"SET_IS_OPEN_WALLET\":\r\n            return {...state, isOpenWallet: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst addCurrency = (payload) => ({type: \"ADD_CURRENCY\", payload});\r\nconst deleteCurrentCurrency = (payload) => ({type: \"DELETE_CURRENT_CURRENCY\", payload});\r\nconst addCurrentCurrency = (payload) => ({type: \"ADD_CURRENT_CURRENCY\", payload});\r\nconst setIsOpenAddingWallet = (payload) => ({type: \"SET_IS_OPEN_ADDING_WALLET\", payload});\r\nconst setIsOpenWallet = (payload) => ({type: \"SET_IS_OPEN_WALLET\", payload});\r\n\r\nexport default walletReducer;\r\nexport {addCurrency, deleteCurrentCurrency, addCurrentCurrency, setIsOpenAddingWallet, setIsOpenWallet};"]},"metadata":{},"sourceType":"module"}