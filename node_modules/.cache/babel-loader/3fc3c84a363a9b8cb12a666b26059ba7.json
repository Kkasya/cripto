{"ast":null,"code":"import _toConsumableArray from\"J:/js/cripto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useEffect}from'react';import{Badge,ListGroup,Button}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import{roundSeparateNumber}from\"../../common/utils\";import{setIsOpenWallet}from\"../../store/walletReducer\";import{getAllCripto,getCripto,getCurrentCripto}from\"../../common/fetch\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Header=function Header(){var _useSelector=useSelector(function(state){return state.assets;}),allAssets=_useSelector.allAssets;var popularCripto=allAssets.slice(0,3);var dispatch=useDispatch();var _useSelector2=useSelector(function(state){return state.wallet;}),currency=_useSelector2.currency,changeWallet=_useSelector2.changeWallet;useEffect(function(){localStorage.setItem('currency',JSON.stringify(currency));},[currency]);useEffect(function(){localStorage.setItem('changeWallet',JSON.stringify(changeWallet));},[changeWallet]);useEffect(function(){localStorage.setItem('allAssets',JSON.stringify(allAssets));},[allAssets]);useEffect(function(){var interval=setInterval(function(){return dispatch(getAllCripto());},10000);return function(){return clearInterval(interval);};},[]);var summaryCurrency=function summaryCurrency(){var summary=0;_toConsumableArray(currency).forEach(function(item){summary+=item.summary;});return summary;};var summary=summaryCurrency();var changePercent=function changePercent(){var prevSummary=summary===changeWallet?changeWallet:summary-changeWallet;return changeWallet?(changeWallet*100/prevSummary).toFixed():0;};var openWallet=function openWallet(){dispatch(setIsOpenWallet(true));};return/*#__PURE__*/_jsxs(\"div\",{className:\"header header__content\",children:[allAssets&&/*#__PURE__*/_jsx(ListGroup,{horizontal:true,className:\"popularCripto__content\",children:popularCripto.map(function(cripto){return/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"border-0 popularCripto__item\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"popularCripto__name\",children:[cripto.name,\" (\",cripto.symbol,\")\"]}),/*#__PURE__*/_jsxs(Badge,{bg:\"primary\",children:[\"$\",roundSeparateNumber(cripto.marketCapUsd)]})]},cripto.symbol);})}),/*#__PURE__*/_jsxs(Button,{variant:\"info\",onClick:openWallet,className:\"wallet__info\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Wallet: \"}),/*#__PURE__*/_jsxs(\"span\",{children:[roundSeparateNumber(summary),\" USD \"]}),/*#__PURE__*/_jsxs(\"span\",{children:[changeWallet<0?\"-\".concat(roundSeparateNumber(changeWallet)):\"+\".concat(roundSeparateNumber(changeWallet)),\"(\",changePercent(),\" %) \"]})]})]});};export default Header;","map":{"version":3,"sources":["J:/js/cripto/src/components/header/Header.component.js"],"names":["React","useEffect","Badge","ListGroup","Button","useDispatch","useSelector","roundSeparateNumber","setIsOpenWallet","getAllCripto","getCripto","getCurrentCripto","Header","state","assets","allAssets","popularCripto","slice","dispatch","wallet","currency","changeWallet","localStorage","setItem","JSON","stringify","interval","setInterval","clearInterval","summaryCurrency","summary","forEach","item","changePercent","prevSummary","toFixed","openWallet","map","cripto","name","symbol","marketCapUsd"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {Badge, ListGroup, Button} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {roundSeparateNumber} from \"../../common/utils\";\r\nimport {setIsOpenWallet} from \"../../store/walletReducer\";\r\nimport {getAllCripto, getCripto, getCurrentCripto} from \"../../common/fetch\";\r\n\r\nconst Header = () => {\r\n    const {allAssets} = useSelector(state => state.assets);\r\n    const popularCripto = allAssets.slice(0, 3);\r\n    const dispatch = useDispatch();\r\n    const {currency, changeWallet} = useSelector(state => state.wallet);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('currency', JSON.stringify(currency ))\r\n    }, [currency]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('changeWallet', JSON.stringify(changeWallet ))\r\n    }, [changeWallet]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('allAssets', JSON.stringify(allAssets ))\r\n    }, [allAssets]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => dispatch(getAllCripto()), 10000);\r\n        return () =>  clearInterval(interval);\r\n    }, []);\r\n\r\n    const summaryCurrency = () => {\r\n        let summary = 0;\r\n        [...currency].forEach((item) => {\r\n            summary += item.summary;\r\n        });\r\n        return summary;\r\n    };\r\n\r\n    const summary = summaryCurrency();\r\n\r\n    const changePercent = () => {\r\n        const prevSummary = summary === changeWallet ? changeWallet : summary - changeWallet;\r\n        return changeWallet ? (changeWallet * 100 / prevSummary).toFixed() : 0\r\n    };\r\n\r\n    const openWallet = () => {\r\n        dispatch(setIsOpenWallet(true));\r\n    };\r\n\r\n    return (\r\n        <div className=\"header header__content\">\r\n            {allAssets && <ListGroup horizontal className=\"popularCripto__content\">\r\n                {popularCripto.map((cripto) =>\r\n                    <ListGroup.Item className=\"border-0 popularCripto__item\" key={cripto.symbol}>\r\n                        <span className=\"popularCripto__name\">{cripto.name} ({cripto.symbol})</span>\r\n                        <Badge bg=\"primary\">${roundSeparateNumber(cripto.marketCapUsd)}</Badge>\r\n                    </ListGroup.Item>\r\n                )}\r\n            </ListGroup>}\r\n            <Button variant=\"info\" onClick={openWallet} className=\"wallet__info\">\r\n                <span>Wallet: </span>\r\n                <span>{roundSeparateNumber(summary)} USD </span>\r\n                <span>{changeWallet < 0 ? `-${roundSeparateNumber(changeWallet)}` : `+${roundSeparateNumber(changeWallet)}`}\r\n                ({changePercent()} %) </span>\r\n            </Button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}