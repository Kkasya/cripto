{"ast":null,"code":"var _jsxFileName = \"J:\\\\js\\\\cripto\\\\src\\\\components\\\\main\\\\components\\\\ItemTable.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getDetails, roundSeparateNumber } from \"../../../common/utils\";\nimport { getCripto, getCurrentCripto } from \"../../../common/fetch\";\nimport { LineChart, AreaChart, Bar, Brush, CartesianGrid, ComposedChart, Legend, Line, Pie, PieChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ItemTableCurrency = ({\n  asset\n}) => {\n  _s();\n\n  const [isOpenDetails, setIsOpenDetails] = useState(false);\n  const [assetDetails, setAssetDetails] = useState([]);\n  const [details, setDetails] = useState({});\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  const now = new Date();\n  const startDay = new Date().setUTCHours(0, 0, 0, 0);\n  const date = now.toLocaleDateString(\"en-US\", options);\n\n  const openDetails = () => {\n    setIsOpenDetails(!isOpenDetails);\n\n    (async () => {\n      const assetsFetch = await getCurrentCripto(asset.id, startDay, now.getTime());\n      setAssetDetails(assetsFetch.data);\n    })();\n  };\n\n  useEffect(() => {\n    assetDetails.length && setDetails(getDetails(assetDetails));\n  }, [assetDetails]);\n  const data = [{\n    name: \"2021-10-23T04:00:00.000Z\",\n    uv: 61226\n  }, {\n    name: \"2021-10-23T05:00:00.000Z\",\n    uv: 61201\n  }, {\n    name: \"2021-10-23T06:00:00.000Z\",\n    uv: 60988\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      onClick: openDetails,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: asset.rank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: asset.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.priceUsd)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.marketCapUsd)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.vwap24Hr)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.supply)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.volumeUsd24Hr)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [roundSeparateNumber(asset.changePercent24Hr), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), isOpenDetails && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"subTable__row\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          rowSpan: 2,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://assets.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: [asset.name, \" (\", asset.symbol, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: [\"HIGH: $\", roundSeparateNumber(details.max)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          rowSpan: 2,\n          class: \"align-middle\",\n          children: [\"AVERAGE: $\", roundSeparateNumber(details.average)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"subTable__row\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: [\"LOW: $\", roundSeparateNumber(details.min)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 800,\n          height: 400,\n          data: data,\n          margin: {\n            top: 5,\n            right: 20,\n            left: 10,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            showMaxMin: false,\n            tickCount: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            activeDot: {\n              r: 8\n            },\n            type: \"monotone\",\n            dataKey: \"uv\",\n            stroke: \"#ff7300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), \"/>\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(ItemTableCurrency, \"Ac2yBdw5Vzx/MhS6lm1zlAJrcm0=\");\n\n_c = ItemTableCurrency;\nexport default ItemTableCurrency;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemTableCurrency\");","map":{"version":3,"sources":["J:/js/cripto/src/components/main/components/ItemTable.component.js"],"names":["React","useEffect","useState","getDetails","roundSeparateNumber","getCripto","getCurrentCripto","LineChart","AreaChart","Bar","Brush","CartesianGrid","ComposedChart","Legend","Line","Pie","PieChart","ResponsiveContainer","Tooltip","XAxis","YAxis","ItemTableCurrency","asset","isOpenDetails","setIsOpenDetails","assetDetails","setAssetDetails","details","setDetails","options","year","month","day","now","Date","startDay","setUTCHours","date","toLocaleDateString","openDetails","assetsFetch","id","getTime","data","length","name","uv","rank","priceUsd","marketCapUsd","vwap24Hr","supply","volumeUsd24Hr","changePercent24Hr","symbol","toLowerCase","max","average","min","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {getDetails, roundSeparateNumber} from \"../../../common/utils\";\r\nimport {getCripto, getCurrentCripto} from \"../../../common/fetch\";\r\nimport {\r\n    LineChart,\r\n    AreaChart,\r\n    Bar,\r\n    Brush,\r\n    CartesianGrid,\r\n    ComposedChart,\r\n    Legend,\r\n    Line,\r\n    Pie,\r\n    PieChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis\r\n} from \"recharts\";\r\n\r\nconst ItemTableCurrency = ({asset}) => {\r\n    const [isOpenDetails, setIsOpenDetails] = useState(false);\r\n    const [assetDetails, setAssetDetails] = useState([]);\r\n    const [details, setDetails] = useState({});\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    const now  = new Date();\r\n    const startDay = (new Date()).setUTCHours(0,0,0,0);\r\n    const date = now.toLocaleDateString(\"en-US\", options);\r\n\r\n    const openDetails = () => {\r\n        setIsOpenDetails(!isOpenDetails);\r\n        (async () => {\r\n            const assetsFetch = await getCurrentCripto(asset.id, startDay, now.getTime());\r\n            setAssetDetails(assetsFetch.data);\r\n        })();\r\n    }\r\n\r\n    useEffect(() => {\r\n        assetDetails.length && setDetails(getDetails(assetDetails));\r\n    }, [assetDetails]);\r\n\r\nconst data=[\r\n    {\r\n        name: \"2021-10-23T04:00:00.000Z\",\r\n        uv: 61226,\r\n    },\r\n    {\r\n        name: \"2021-10-23T05:00:00.000Z\",\r\n        uv: 61201,\r\n    },\r\n    {\r\n        name: \"2021-10-23T06:00:00.000Z\",\r\n        uv: 60988,\r\n    },\r\n\r\n];\r\n\r\n    return (\r\n        <>\r\n            <tr onClick={openDetails}>\r\n                <td>{asset.rank}</td>\r\n                <td>{asset.name}</td>\r\n                <td>${roundSeparateNumber(asset.priceUsd)}</td>\r\n                <td>${roundSeparateNumber(asset.marketCapUsd)}</td>\r\n                <td>${roundSeparateNumber(asset.vwap24Hr)}</td>\r\n                <td>${roundSeparateNumber(asset.supply)}</td>\r\n                <td>${roundSeparateNumber(asset.volumeUsd24Hr)}</td>\r\n                <td>{roundSeparateNumber(asset.changePercent24Hr)}%</td>\r\n            </tr>\r\n            {isOpenDetails && <>\r\n                <tr className=\"subTable__row\">\r\n                    <td colSpan={2} rowSpan={2}>\r\n                        <img src={`https://assets.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`}/>\r\n                    </td>\r\n                    <td colSpan={2}>\r\n                        {asset.name} ({asset.symbol})\r\n                    </td>\r\n                    <td colSpan={2}>HIGH: ${roundSeparateNumber(details.max)}</td>\r\n                    <td colSpan={2} rowSpan={2} class=\"align-middle\">AVERAGE: ${roundSeparateNumber(details.average)}</td>\r\n                </tr>\r\n                    <tr className=\"subTable__row\">\r\n                        <td colSpan={2}>{date}</td>\r\n                        <td colSpan={2}>LOW: ${roundSeparateNumber(details.min)}</td>\r\n                    </tr>\r\n                <tr>\r\n                    <LineChart\r\n                        width={800}\r\n                        height={400}\r\n                        data={data}\r\n                        margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\r\n                    >\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis showMaxMin={false} tickCount={20}  />\r\n                        <Tooltip />\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <Line activeDot={{ r: 8 }} type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\"  />\r\n                         />\r\n                    </LineChart>\r\n                </tr>\r\n                </>\r\n                }\r\n            </>\r\n                )\r\n            }\r\n;\r\n\r\nexport default ItemTableCurrency;"]},"metadata":{},"sourceType":"module"}