{"ast":null,"code":"import _toConsumableArray from\"J:/js/cripto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"J:/js/cripto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var currency=JSON.parse(localStorage.getItem('currency'))||[];var changeWallet=JSON.parse(localStorage.getItem('changeWallet'))||null;var defaultState={currency:currency,addedCurrency:{},changeWallet:changeWallet,isOpenAddingWallet:false,isOpenWallet:false};var walletReducer=function walletReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"ADD_CURRENCY\":if(state.currency.filter(function(item){return item.id===action.payload.id;}).length){return _objectSpread(_objectSpread({},state),{},{currency:_toConsumableArray(state.currency).map(function(item){if(item.id===action.payload.id&&item.price===action.payload.price){item.summary=Number(item.summary)+Number(action.payload.summary);item.count=Number(item.count)+Number(action.payload.count);}return item;}),changeWallet:action.payload.summary});}else return _objectSpread(_objectSpread({},state),{},{currency:[].concat(_toConsumableArray(state.currency),[action.payload]),changeWallet:action.payload.summary});case\"DELETE_CURRENT_CURRENCY\":return _objectSpread(_objectSpread({},state),{},{changeWallet:-Number(action.payload.summary),currency:_toConsumableArray(state.currency).filter(function(item){return item.id!==action.payload.id&&item.price!==action.payload.priceUsd;})});case\"ADD_CURRENT_CURRENCY\":return _objectSpread(_objectSpread({},state),{},{addedCurrency:action.payload});case\"SET_IS_OPEN_ADDING_WALLET\":return _objectSpread(_objectSpread({},state),{},{isOpenAddingWallet:action.payload});case\"SET_IS_OPEN_WALLET\":return _objectSpread(_objectSpread({},state),{},{isOpenWallet:action.payload});default:return state;}};var addCurrency=function addCurrency(payload){return{type:\"ADD_CURRENCY\",payload:payload};};var deleteCurrentCurrency=function deleteCurrentCurrency(payload){return{type:\"DELETE_CURRENT_CURRENCY\",payload:payload};};var addCurrentCurrency=function addCurrentCurrency(payload){return{type:\"ADD_CURRENT_CURRENCY\",payload:payload};};var setIsOpenAddingWallet=function setIsOpenAddingWallet(payload){return{type:\"SET_IS_OPEN_ADDING_WALLET\",payload:payload};};var setIsOpenWallet=function setIsOpenWallet(payload){return{type:\"SET_IS_OPEN_WALLET\",payload:payload};};export default walletReducer;export{addCurrency,deleteCurrentCurrency,addCurrentCurrency,setIsOpenAddingWallet,setIsOpenWallet};","map":{"version":3,"sources":["J:/js/cripto/src/store/walletReducer.js"],"names":["currency","JSON","parse","localStorage","getItem","changeWallet","defaultState","addedCurrency","isOpenAddingWallet","isOpenWallet","walletReducer","state","action","type","filter","item","id","payload","length","map","price","summary","Number","count","priceUsd","addCurrency","deleteCurrentCurrency","addCurrentCurrency","setIsOpenAddingWallet","setIsOpenWallet"],"mappings":"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","sourcesContent":["const currency = JSON.parse(localStorage.getItem('currency')) || [];\r\nconst changeWallet = JSON.parse(localStorage.getItem('changeWallet')) || null;\r\n\r\nconst defaultState = {\r\n    currency: currency,\r\n    addedCurrency: {},\r\n    changeWallet: changeWallet,\r\n    isOpenAddingWallet: false,\r\n    isOpenWallet: false,\r\n};\r\n\r\nconst walletReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_CURRENCY\":\r\n            if (state.currency.filter((item) => item.id === action.payload.id).length) {\r\n                return {\r\n                    ...state,\r\n                    currency: [...state.currency].map((item) => {\r\n                        if (item.id === action.payload.id && item.price === action.payload.price) {\r\n                            item.summary = Number(item.summary) + Number(action.payload.summary);\r\n                            item.count = Number(item.count) + Number(action.payload.count);\r\n                        }\r\n                        return item\r\n                    }),\r\n                    changeWallet: action.payload.summary\r\n                };\r\n            }\r\n                else return {...state,  currency: [...state.currency, action.payload],\r\n                changeWallet: action.payload.summary};\r\n        case \"DELETE_CURRENT_CURRENCY\":\r\n            return {...state, changeWallet: -Number(action.payload.summary),\r\n                currency: [...state.currency].filter((item) =>\r\n                    item.id !== action.payload.id && item.price !== action.payload.priceUsd)};\r\n        case \"ADD_CURRENT_CURRENCY\":\r\n            return {...state, addedCurrency: action.payload};\r\n        case \"SET_IS_OPEN_ADDING_WALLET\":\r\n            return {...state, isOpenAddingWallet: action.payload};\r\n        case \"SET_IS_OPEN_WALLET\":\r\n            return {...state, isOpenWallet: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst addCurrency = (payload) => ({type: \"ADD_CURRENCY\", payload});\r\nconst deleteCurrentCurrency = (payload) => ({type: \"DELETE_CURRENT_CURRENCY\", payload});\r\nconst addCurrentCurrency = (payload) => ({type: \"ADD_CURRENT_CURRENCY\", payload});\r\nconst setIsOpenAddingWallet = (payload) => ({type: \"SET_IS_OPEN_ADDING_WALLET\", payload});\r\nconst setIsOpenWallet = (payload) => ({type: \"SET_IS_OPEN_WALLET\", payload});\r\n\r\nexport default walletReducer;\r\nexport {addCurrency, deleteCurrentCurrency, addCurrentCurrency, setIsOpenAddingWallet, setIsOpenWallet};"]},"metadata":{},"sourceType":"module"}