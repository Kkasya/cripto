{"ast":null,"code":"const currency = JSON.parse(localStorage.getItem('currency')) || [];\nconst changeWallet = JSON.parse(localStorage.getItem('changeWallet')) || null;\nconst defaultState = {\n  currency: currency,\n  addedCurrency: {},\n  changeWallet: changeWallet,\n  isOpenAddingWallet: false,\n  isOpenWallet: false\n};\n\nconst walletReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case \"ADD_CURRENCY\":\n      return { ...state,\n        currency: [...state.currency, action.payload],\n        changeWallet: action.payload.summary\n      };\n\n    case \"DELETE_CURRENT_CURRENCY\":\n      return { ...state,\n        changeWallet: -Number(action.payload.summary),\n        currency: [...state.currency].filter(item => item.id !== action.payload.id && item.price !== action.payload.priceUsd)\n      };\n\n    case \"ADD_CURRENT_CURRENCY\":\n      return { ...state,\n        addedCurrency: action.payload\n      };\n\n    case \"SET_IS_OPEN_ADDING_WALLET\":\n      return { ...state,\n        isOpenAddingWallet: action.payload\n      };\n\n    case \"SET_IS_OPEN_WALLET\":\n      return { ...state,\n        isOpenWallet: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst addCurrency = payload => ({\n  type: \"ADD_CURRENCY\",\n  payload\n});\n\nconst deleteCurrentCurrency = payload => ({\n  type: \"DELETE_CURRENT_CURRENCY\",\n  payload\n});\n\nconst addCurrentCurrency = payload => ({\n  type: \"ADD_CURRENT_CURRENCY\",\n  payload\n});\n\nconst setIsOpenAddingWallet = payload => ({\n  type: \"SET_IS_OPEN_ADDING_WALLET\",\n  payload\n});\n\nconst setIsOpenWallet = payload => ({\n  type: \"SET_IS_OPEN_WALLET\",\n  payload\n});\n\nexport default walletReducer;\nexport { addCurrency, deleteCurrentCurrency, addCurrentCurrency, setIsOpenAddingWallet, setIsOpenWallet };","map":{"version":3,"sources":["J:/js/cripto/src/store/walletReducer.js"],"names":["currency","JSON","parse","localStorage","getItem","changeWallet","defaultState","addedCurrency","isOpenAddingWallet","isOpenWallet","walletReducer","state","action","type","payload","summary","Number","filter","item","id","price","priceUsd","addCurrency","deleteCurrentCurrency","addCurrentCurrency","setIsOpenAddingWallet","setIsOpenWallet"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,KAAgD,EAAjE;AACA,MAAMC,YAAY,GAAGJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,KAAoD,IAAzE;AAEA,MAAME,YAAY,GAAG;AACjBN,EAAAA,QAAQ,EAAEA,QADO;AAEjBO,EAAAA,aAAa,EAAE,EAFE;AAGjBF,EAAAA,YAAY,EAAEA,YAHG;AAIjBG,EAAAA,kBAAkB,EAAE,KAJH;AAKjBC,EAAAA,YAAY,EAAE;AALG,CAArB;;AAQA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWX,QAAAA,QAAQ,EAAE,CAAC,GAAGW,KAAK,CAACX,QAAV,EAAoBY,MAAM,CAACE,OAA3B,CAArB;AAA0DT,QAAAA,YAAY,EAAEO,MAAM,CAACE,OAAP,CAAeC;AAAvF,OAAP;;AACJ,SAAK,yBAAL;AACI,aAAO,EAAC,GAAGJ,KAAJ;AAAWN,QAAAA,YAAY,EAAE,CAACW,MAAM,CAACJ,MAAM,CAACE,OAAP,CAAeC,OAAhB,CAAhC;AACHf,QAAAA,QAAQ,EAAE,CAAC,GAAGW,KAAK,CAACX,QAAV,EAAoBiB,MAApB,CAA4BC,IAAD,IACjCA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACE,OAAP,CAAeK,EAA3B,IAAiCD,IAAI,CAACE,KAAL,KAAeR,MAAM,CAACE,OAAP,CAAeO,QADzD;AADP,OAAP;;AAGJ,SAAK,sBAAL;AACI,aAAO,EAAC,GAAGV,KAAJ;AAAWJ,QAAAA,aAAa,EAAEK,MAAM,CAACE;AAAjC,OAAP;;AACJ,SAAK,2BAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWH,QAAAA,kBAAkB,EAAEI,MAAM,CAACE;AAAtC,OAAP;;AACJ,SAAK,oBAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWF,QAAAA,YAAY,EAAEG,MAAM,CAACE;AAAhC,OAAP;;AACJ;AACI,aAAOH,KAAP;AAdR;AAgBH,CAjBD;;AAmBA,MAAMW,WAAW,GAAIR,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAE,cAAP;AAAuBC,EAAAA;AAAvB,CAAd,CAApB;;AACA,MAAMS,qBAAqB,GAAIT,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAE,yBAAP;AAAkCC,EAAAA;AAAlC,CAAd,CAA9B;;AACA,MAAMU,kBAAkB,GAAIV,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAE,sBAAP;AAA+BC,EAAAA;AAA/B,CAAd,CAA3B;;AACA,MAAMW,qBAAqB,GAAIX,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAE,2BAAP;AAAoCC,EAAAA;AAApC,CAAd,CAA9B;;AACA,MAAMY,eAAe,GAAIZ,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAE,oBAAP;AAA6BC,EAAAA;AAA7B,CAAd,CAAxB;;AAEA,eAAeJ,aAAf;AACA,SAAQY,WAAR,EAAqBC,qBAArB,EAA4CC,kBAA5C,EAAgEC,qBAAhE,EAAuFC,eAAvF","sourcesContent":["const currency = JSON.parse(localStorage.getItem('currency')) || [];\r\nconst changeWallet = JSON.parse(localStorage.getItem('changeWallet')) || null;\r\n\r\nconst defaultState = {\r\n    currency: currency,\r\n    addedCurrency: {},\r\n    changeWallet: changeWallet,\r\n    isOpenAddingWallet: false,\r\n    isOpenWallet: false,\r\n};\r\n\r\nconst walletReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_CURRENCY\":\r\n            return {...state, currency: [...state.currency, action.payload], changeWallet: action.payload.summary};\r\n        case \"DELETE_CURRENT_CURRENCY\":\r\n            return {...state, changeWallet: -Number(action.payload.summary),\r\n                currency: [...state.currency].filter((item) =>\r\n                    item.id !== action.payload.id && item.price !== action.payload.priceUsd)};\r\n        case \"ADD_CURRENT_CURRENCY\":\r\n            return {...state, addedCurrency: action.payload};\r\n        case \"SET_IS_OPEN_ADDING_WALLET\":\r\n            return {...state, isOpenAddingWallet: action.payload};\r\n        case \"SET_IS_OPEN_WALLET\":\r\n            return {...state, isOpenWallet: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst addCurrency = (payload) => ({type: \"ADD_CURRENCY\", payload});\r\nconst deleteCurrentCurrency = (payload) => ({type: \"DELETE_CURRENT_CURRENCY\", payload});\r\nconst addCurrentCurrency = (payload) => ({type: \"ADD_CURRENT_CURRENCY\", payload});\r\nconst setIsOpenAddingWallet = (payload) => ({type: \"SET_IS_OPEN_ADDING_WALLET\", payload});\r\nconst setIsOpenWallet = (payload) => ({type: \"SET_IS_OPEN_WALLET\", payload});\r\n\r\nexport default walletReducer;\r\nexport {addCurrency, deleteCurrentCurrency, addCurrentCurrency, setIsOpenAddingWallet, setIsOpenWallet};"]},"metadata":{},"sourceType":"module"}