{"ast":null,"code":"import _regeneratorRuntime from\"J:/js/cripto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"J:/js/cripto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{addAllAssets,addAssets}from\"../store/assetReducer\";import{addAssets24,addDetails}from\"../store/detailsReducer\";import{getDetails}from\"./utils\";var getAllCripto=function getAllCripto(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('https://api.coincap.io/v2/assets');case 2:response=_context.sent;dispatch(addAllAssets(response.data.data));case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};var getCripto=function getCripto(page,limit){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get('https://api.coincap.io/v2/assets',{params:{limit:limit,offset:(page-1)*limit}});case 2:response=_context2.sent;dispatch(addAssets(response.data.data));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var getCurrentCripto=function getCurrentCripto(id,start,end,isDetails){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.get(\"https://api.coincap.io/v2/assets/\".concat(id,\"/history\"),{params:{interval:'h1',start:start,end:end}});case 2:response=_context3.sent;if(isDetails){dispatch(addDetails(getDetails(response.data.data)));}else dispatch(addAssets24(response.data.data));case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export{getCripto,getCurrentCripto,getAllCripto};","map":{"version":3,"sources":["J:/js/cripto/src/common/fetch.js"],"names":["axios","addAllAssets","addAssets","addAssets24","addDetails","getDetails","getAllCripto","dispatch","get","response","data","getCripto","page","limit","params","offset","getCurrentCripto","id","start","end","isDetails","interval"],"mappings":"mQAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,YAAR,CAAsBC,SAAtB,KAAsC,uBAAtC,CACA,OAAQC,WAAR,CAAqBC,UAArB,KAAsC,yBAAtC,CACA,OAAQC,UAAR,KAAyB,SAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,+FAAO,iBAAOC,QAAP,qJACoBP,CAAAA,KAAK,CAACQ,GAAN,CAAU,kCAAV,CADpB,QACGC,QADH,eAEHF,QAAQ,CAACN,YAAY,CAACQ,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAb,CAAR,CAFG,sDAAP,+DAIH,CALD,CAOA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAOC,KAAP,CAAiB,CAC/B,gGAAO,kBAAON,QAAP,0JACoBP,CAAAA,KAAK,CAACQ,GAAN,CAAU,kCAAV,CAA8C,CACjEM,MAAM,CAAE,CACJD,KAAK,CAAEA,KADH,CAEJE,MAAM,CAAE,CAACH,IAAI,CAAG,CAAR,EAAaC,KAFjB,CADyD,CAA9C,CADpB,QACGJ,QADH,gBAOHF,QAAQ,CAACL,SAAS,CAACO,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAV,CAAR,CAPG,wDAAP,iEASH,CAVD,CAYA,GAAMM,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,EAAD,CAAKC,KAAL,CAAYC,GAAZ,CAAiBC,SAAjB,CAA+B,CACpD,gGAAO,kBAAOb,QAAP,0JACoBP,CAAAA,KAAK,CAACQ,GAAN,4CAA8CS,EAA9C,aAA4D,CAC/EH,MAAM,CAAE,CACJO,QAAQ,CAAE,IADN,CAEJH,KAAK,CAAEA,KAFH,CAGJC,GAAG,CAAEA,GAHD,CADuE,CAA5D,CADpB,QACGV,QADH,gBAQH,GAAIW,SAAJ,CAAe,CACXb,QAAQ,CAACH,UAAU,CAACC,UAAU,CAACI,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAX,CAAX,CAAR,CACH,CAFD,IAEOH,CAAAA,QAAQ,CAACJ,WAAW,CAACM,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAZ,CAAR,CAVJ,wDAAP,iEAYH,CAbD,CAeA,OAAQC,SAAR,CAAmBK,gBAAnB,CAAqCV,YAArC","sourcesContent":["import axios from \"axios\";\r\nimport {addAllAssets, addAssets} from \"../store/assetReducer\";\r\nimport {addAssets24, addDetails} from \"../store/detailsReducer\";\r\nimport {getDetails} from \"./utils\";\r\n\r\nconst getAllCripto = () => {\r\n    return async (dispatch) => {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets');\r\n        dispatch(addAllAssets(response.data.data));\r\n    }\r\n};\r\n\r\nconst getCripto = (page, limit) => {\r\n    return async (dispatch) => {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets', {\r\n            params: {\r\n                limit: limit,\r\n                offset: (page - 1) * limit,\r\n            }\r\n        });\r\n        dispatch(addAssets(response.data.data));\r\n    }\r\n};\r\n\r\nconst getCurrentCripto = (id, start, end, isDetails) => {\r\n    return async (dispatch) => {\r\n        const response = await axios.get(`https://api.coincap.io/v2/assets/${id}/history`, {\r\n            params: {\r\n                interval: 'h1',\r\n                start: start,\r\n                end: end,\r\n            }\r\n        });\r\n        if (isDetails) {\r\n            dispatch(addDetails(getDetails(response.data.data)));\r\n        } else dispatch(addAssets24(response.data.data));\r\n    }\r\n};\r\n\r\nexport {getCripto, getCurrentCripto, getAllCripto};"]},"metadata":{},"sourceType":"module"}