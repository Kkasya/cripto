{"ast":null,"code":"import assetReducer from \"./assetReducer\";\nimport { combineReducers, createStore } from \"redux\";\nimport detailsReducer from \"./detailsReducer\";\nimport walletReducer from \"./walletReducer\";\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {};\nconsole.log(persistedState);\nconst rootReducer = combineReducers({\n  // assets: assetReducer,\n  // details: detailsReducer,\n  // wallet: walletReducer,\n  persistedState\n});\nconst store = createStore(rootReducer);\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()));\n});\nexport default store;","map":{"version":3,"sources":["J:/js/cripto/src/store/index.js"],"names":["assetReducer","combineReducers","createStore","detailsReducer","walletReducer","persistedState","localStorage","getItem","JSON","parse","console","log","rootReducer","store","subscribe","setItem","stringify","getState"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IACpBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CADoB,GAEpB,EAFH;AAGAG,OAAO,CAACC,GAAR,CAAaN,cAAb;AAEA,MAAMO,WAAW,GAAGX,eAAe,CAAC;AACnC;AACA;AACA;AACAI,EAAAA;AAJmC,CAAD,CAAnC;AAOA,MAAMQ,KAAK,GAAGX,WAAW,CAACU,WAAD,CAAzB;AAGAC,KAAK,CAACC,SAAN,CAAgB,MAAM;AACrBR,EAAAA,YAAY,CAACS,OAAb,CAAqB,YAArB,EAAmCP,IAAI,CAACQ,SAAL,CAAeH,KAAK,CAACI,QAAN,EAAf,CAAnC;AACA,CAFD;AAKA,eAAeJ,KAAf","sourcesContent":["import assetReducer from \"./assetReducer\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport detailsReducer from \"./detailsReducer\";\r\nimport walletReducer from \"./walletReducer\";\r\n\r\nconst persistedState = localStorage.getItem('reduxState')\r\n\t? JSON.parse(localStorage.getItem('reduxState'))\r\n\t: {}\r\nconsole.log((persistedState))\r\n\r\nconst rootReducer = combineReducers({\r\n\t// assets: assetReducer,\r\n\t// details: detailsReducer,\r\n\t// wallet: walletReducer,\r\n\tpersistedState,\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\n\r\nstore.subscribe(() => {\r\n\tlocalStorage.setItem('reduxState', JSON.stringify(store.getState()));\r\n});\r\n\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}