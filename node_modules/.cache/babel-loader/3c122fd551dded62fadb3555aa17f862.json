{"ast":null,"code":"var _jsxFileName = \"J:\\\\js\\\\cripto\\\\src\\\\components\\\\main\\\\components\\\\ItemTable.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getDetails, roundSeparateNumber } from \"../../../common/utils\";\nimport { getCripto, getCurrentCripto } from \"../../../common/fetch\";\nimport { LineChart, AreaChart, Bar, Brush, CartesianGrid, ComposedChart, Legend, Line, Pie, PieChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ItemTableCurrency = ({\n  asset\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    assetsToday,\n    assets24h,\n    details,\n    isOpen\n  } = useSelector(state => state.details);\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  const now = new Date();\n  const startDay = new Date().setUTCHours(0, 0, 0, 0);\n  const start24h = new Date(new Date().getTime() - 24 * 60 * 60 * 1000);\n  const date = now.toLocaleDateString(\"en-US\", options);\n\n  const openDetails = () => {\n    (async () => {\n      const assetsFetch = await getCurrentCripto(asset.id, startDay, now.getTime());\n      dispatch({\n        type: \"ADD_ASSETS_TODAY\",\n        payload: assetsFetch.data\n      });\n      const assets24h = await getCurrentCripto(asset.id, start24h.getTime(), now.getTime());\n      dispatch({\n        type: \"ADD_ASSETS_24h\",\n        payload: assets24h.data\n      });\n      dispatch({\n        type: \"ADD_DETAILS\",\n        payload: getDetails(assetsFetch.data)\n      });\n      dispatch({\n        type: \"SET_IS_OPEN\",\n        payload: asset.id\n      });\n    })();\n  };\n\n  const formatYAxis = tickItem => {\n    return Number(tickItem).toFixed();\n  };\n\n  const formatXAxis = tickItem => {\n    const hour = new Date(tickItem).getHours();\n    return `${hour}h`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      onClick: openDetails,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: asset.rank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: asset.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.priceUsd)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.marketCapUsd)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.vwap24Hr)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.supply)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.volumeUsd24Hr)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [roundSeparateNumber(asset.changePercent24Hr), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), isOpen === asset.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"subTable__row\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          rowSpan: 2,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://assets.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: [asset.name, \" (\", asset.symbol, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: [\"HIGH: $\", roundSeparateNumber(details.max)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          rowSpan: 2,\n          className: \"align-middle\",\n          children: [\"AVERAGE: $\", roundSeparateNumber(details.average)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"subTable__row\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: [\"LOW: $\", roundSeparateNumber(details.min)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: assets24h.length && /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 800,\n          height: 400,\n          data: assets24h,\n          margin: {\n            top: 5,\n            right: 20,\n            left: 10,\n            bottom: 5\n          },\n          useInteractiveGuideline: true,\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\",\n            tickFormatter: formatXAxis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            showMaxMin: false,\n            tickCount: 20,\n            tickFormatter: formatYAxis,\n            type: \"number\",\n            domain: [details.min, details.max]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            activeDot: {\n              r: 8\n            },\n            type: \"monotone\",\n            dataKey: \"priceUsd\",\n            stroke: \"#ff7300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), \"/>\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(ItemTableCurrency, \"xwEU0nYVnh7tYhbQiUXTlf/sPPY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ItemTableCurrency;\nexport default ItemTableCurrency;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemTableCurrency\");","map":{"version":3,"sources":["J:/js/cripto/src/components/main/components/ItemTable.component.js"],"names":["React","useEffect","useState","getDetails","roundSeparateNumber","getCripto","getCurrentCripto","LineChart","AreaChart","Bar","Brush","CartesianGrid","ComposedChart","Legend","Line","Pie","PieChart","ResponsiveContainer","Tooltip","XAxis","YAxis","useDispatch","useSelector","ItemTableCurrency","asset","dispatch","assetsToday","assets24h","details","isOpen","state","options","year","month","day","now","Date","startDay","setUTCHours","start24h","getTime","date","toLocaleDateString","openDetails","assetsFetch","id","type","payload","data","formatYAxis","tickItem","Number","toFixed","formatXAxis","hour","getHours","rank","name","priceUsd","marketCapUsd","vwap24Hr","supply","volumeUsd24Hr","changePercent24Hr","symbol","toLowerCase","max","average","min","length","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {getDetails, roundSeparateNumber} from \"../../../common/utils\";\r\nimport {getCripto, getCurrentCripto} from \"../../../common/fetch\";\r\nimport {\r\n    LineChart,\r\n    AreaChart,\r\n    Bar,\r\n    Brush,\r\n    CartesianGrid,\r\n    ComposedChart,\r\n    Legend,\r\n    Line,\r\n    Pie,\r\n    PieChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis\r\n} from \"recharts\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst ItemTableCurrency = ({asset}) => {\r\n        const dispatch = useDispatch();\r\n        const {assetsToday, assets24h, details, isOpen} = useSelector(state => state.details);\r\n\r\n        const options = {year: 'numeric', month: 'long', day: 'numeric'};\r\n        const now = new Date();\r\n        const startDay = (new Date()).setUTCHours(0, 0, 0, 0);\r\n        const start24h = new Date(new Date().getTime() - (24 * 60 * 60 * 1000));\r\n        const date = now.toLocaleDateString(\"en-US\", options);\r\n\r\n        const openDetails = () => {\r\n            (async () => {\r\n                const assetsFetch = await getCurrentCripto(asset.id, startDay, now.getTime());\r\n                dispatch({type: \"ADD_ASSETS_TODAY\", payload: assetsFetch.data});\r\n                const assets24h = await getCurrentCripto(asset.id, start24h.getTime(), now.getTime());\r\n                dispatch({type: \"ADD_ASSETS_24h\", payload: assets24h.data});\r\n                dispatch({type: \"ADD_DETAILS\", payload: getDetails(assetsFetch.data)});\r\n                dispatch({type: \"SET_IS_OPEN\", payload: asset.id});\r\n            })();\r\n        };\r\n\r\n        const formatYAxis = (tickItem) => {\r\n            return Number(tickItem).toFixed();\r\n        };\r\n\r\n        const formatXAxis = (tickItem) => {\r\n            const hour = (new Date(tickItem)).getHours();\r\n            return `${hour}h`;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <tr onClick={openDetails}>\r\n                    <td>{asset.rank}</td>\r\n                    <td>{asset.name}</td>\r\n                    <td>${roundSeparateNumber(asset.priceUsd)}</td>\r\n                    <td>${roundSeparateNumber(asset.marketCapUsd)}</td>\r\n                    <td>${roundSeparateNumber(asset.vwap24Hr)}</td>\r\n                    <td>${roundSeparateNumber(asset.supply)}</td>\r\n                    <td>${roundSeparateNumber(asset.volumeUsd24Hr)}</td>\r\n                    <td>{roundSeparateNumber(asset.changePercent24Hr)}%</td>\r\n                </tr>\r\n                {(isOpen === asset.id) && <>\r\n                    <tr className=\"subTable__row\">\r\n                        <td colSpan={2} rowSpan={2}>\r\n                            <img src={`https://assets.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`}/>\r\n                        </td>\r\n                        <td colSpan={2}>\r\n                            {asset.name} ({asset.symbol})\r\n                        </td>\r\n                        <td colSpan={2}>HIGH: ${roundSeparateNumber(details.max)}</td>\r\n                        <td colSpan={2} rowSpan={2} className=\"align-middle\">AVERAGE:\r\n                            ${roundSeparateNumber(details.average)}</td>\r\n                    </tr>\r\n                    <tr className=\"subTable__row\">\r\n                        <td colSpan={2}>{date}</td>\r\n                        <td colSpan={2}>LOW: ${roundSeparateNumber(details.min)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        {assets24h.length && <LineChart\r\n                            width={800}\r\n                            height={400}\r\n                            data={assets24h}\r\n                            margin={{top: 5, right: 20, left: 10, bottom: 5}}\r\n                            useInteractiveGuideline={true}\r\n                        >\r\n                            <XAxis dataKey=\"date\" tickFormatter={formatXAxis}/>\r\n                            <YAxis showMaxMin={false} tickCount={20} tickFormatter={formatYAxis} type=\"number\"\r\n                                   domain={[details.min, details.max]}/>\r\n                            <Tooltip/>\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <Line activeDot={{r: 8}} type=\"monotone\" dataKey=\"priceUsd\" stroke=\"#ff7300\"/>\r\n                            />\r\n                        </LineChart>}\r\n                    </tr>\r\n                </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n;\r\n\r\nexport default ItemTableCurrency;"]},"metadata":{},"sourceType":"module"}