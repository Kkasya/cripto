{"ast":null,"code":"import axios from \"axios\";\nimport { addAssets } from \"../store/assetReducer\";\nimport { addAssets24, addDetails } from \"../store/detailsReducer\";\nimport { getDetails } from \"./utils\";\n\nconst getAllCripto = () => {\n  return async dispatch => {\n    const response = await axios.get('https://api.coincap.io/v2/assets');\n    dispatch(addAllAssets(response.data.data));\n  };\n};\n\nconst getCripto = (page, limit) => {\n  return async dispatch => {\n    const response = await axios.get('https://api.coincap.io/v2/assets', {\n      params: {\n        limit: limit,\n        offset: (page - 1) * limit\n      }\n    });\n    dispatch(addAssets(response.data.data));\n  };\n};\n\nconst getCurrentCripto = (id, start, end, isDetails) => {\n  return async dispatch => {\n    console.log('dispatch');\n    const response = await axios.get(`https://api.coincap.io/v2/assets/${id}/history`, {\n      params: {\n        interval: 'h1',\n        start: start,\n        end: end\n      }\n    });\n    console.log(isDetails);\n\n    if (isDetails) {\n      dispatch(addDetails(getDetails(response.data.data)));\n    } else dispatch(addAssets24(response.data.data)); //         const func = async () => {\n    //\n    //         };\n    //\n    // let count = 0;\n    // console.log(count)\n    // while (count < 10) {\n    //     try {\n    //         func();\n    //         count = 10;\n    //     } catch (e) {\n    //         count += 1;\n    //         console.log(count)\n    //     }\n\n  };\n};\n\nexport { getCripto, getCurrentCripto, getAllCripto };","map":{"version":3,"sources":["J:/js/cripto/src/common/fetch.js"],"names":["axios","addAssets","addAssets24","addDetails","getDetails","getAllCripto","dispatch","response","get","addAllAssets","data","getCripto","page","limit","params","offset","getCurrentCripto","id","start","end","isDetails","console","log","interval"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAsC,yBAAtC;AACA,SAAQC,UAAR,QAAyB,SAAzB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,kCAAV,CAAvB;AACAF,IAAAA,QAAQ,CAACG,YAAY,CAACF,QAAQ,CAACG,IAAT,CAAcA,IAAf,CAAb,CAAR;AACH,GAHD;AAIH,CALD;;AAOA,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,SAAO,MAAOP,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,kCAAV,EAA8C;AACjEM,MAAAA,MAAM,EAAE;AACJD,QAAAA,KAAK,EAAEA,KADH;AAEJE,QAAAA,MAAM,EAAE,CAACH,IAAI,GAAG,CAAR,IAAaC;AAFjB;AADyD,KAA9C,CAAvB;AAMAP,IAAAA,QAAQ,CAACL,SAAS,CAACM,QAAQ,CAACG,IAAT,CAAcA,IAAf,CAAV,CAAR;AACH,GARD;AASH,CAVD;;AAYA,MAAMM,gBAAgB,GAAG,CAACC,EAAD,EAAKC,KAAL,EAAYC,GAAZ,EAAiBC,SAAjB,KAA+B;AACpD,SAAO,MAAOd,QAAP,IAAoB;AACvBe,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,UAAMf,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,oCAAmCS,EAAG,UAAjD,EAA4D;AAC/EH,MAAAA,MAAM,EAAE;AACJS,QAAAA,QAAQ,EAAE,IADN;AAEJL,QAAAA,KAAK,EAAEA,KAFH;AAGJC,QAAAA,GAAG,EAAEA;AAHD;AADuE,KAA5D,CAAvB;AAOAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AACA,QAAIA,SAAJ,EAAe;AACXd,MAAAA,QAAQ,CAACH,UAAU,CAACC,UAAU,CAACG,QAAQ,CAACG,IAAT,CAAcA,IAAf,CAAX,CAAX,CAAR;AACH,KAFD,MAEOJ,QAAQ,CAACJ,WAAW,CAACK,QAAQ,CAACG,IAAT,CAAcA,IAAf,CAAZ,CAAR,CAZgB,CAc/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACK,GA5BD;AA6BH,CA9BD;;AAgCA,SAAQC,SAAR,EAAmBK,gBAAnB,EAAqCX,YAArC","sourcesContent":["import axios from \"axios\";\r\nimport {addAssets} from \"../store/assetReducer\";\r\nimport {addAssets24, addDetails} from \"../store/detailsReducer\";\r\nimport {getDetails} from \"./utils\";\r\n\r\nconst getAllCripto = () => {\r\n    return async (dispatch) => {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets');\r\n        dispatch(addAllAssets(response.data.data));\r\n    }\r\n};\r\n\r\nconst getCripto = (page, limit) => {\r\n    return async (dispatch) => {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets', {\r\n            params: {\r\n                limit: limit,\r\n                offset: (page - 1) * limit,\r\n            }\r\n        });\r\n        dispatch(addAssets(response.data.data));\r\n    }\r\n};\r\n\r\nconst getCurrentCripto = (id, start, end, isDetails) => {\r\n    return async (dispatch) => {\r\n        console.log('dispatch')\r\n        const response = await axios.get(`https://api.coincap.io/v2/assets/${id}/history`, {\r\n            params: {\r\n                interval: 'h1',\r\n                start: start,\r\n                end: end,\r\n            }\r\n        });\r\n        console.log(isDetails)\r\n        if (isDetails) {\r\n            dispatch(addDetails(getDetails(response.data.data)));\r\n        } else dispatch(addAssets24(response.data.data));\r\n\r\n//         const func = async () => {\r\n//\r\n//         };\r\n//\r\n// let count = 0;\r\n// console.log(count)\r\n// while (count < 10) {\r\n//     try {\r\n//         func();\r\n//         count = 10;\r\n//     } catch (e) {\r\n//         count += 1;\r\n//         console.log(count)\r\n//     }\r\n    }\r\n};\r\n\r\nexport {getCripto, getCurrentCripto, getAllCripto};"]},"metadata":{},"sourceType":"module"}