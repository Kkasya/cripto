{"ast":null,"code":"var _jsxFileName = \"J:\\\\js\\\\cripto\\\\src\\\\components\\\\main\\\\Main.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { getCripto, getCurrentCripto } from \"../../common/fetch\";\nimport TableCurrency from \"./components/Table.component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PaginationBlock from \"./components/Pagination.component\";\nimport Loader from \"./components/Loader.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    assets,\n    activePage,\n    limit,\n    isOpenAssets\n  } = useSelector(state => state.assets);\n  useEffect(() => {\n    localStorage.setItem('page', JSON.stringify(activePage));\n    const interval = setInterval(() => dispatch(getCripto(activePage, limit)), 200000);\n    return () => clearInterval(interval);\n  }, [activePage, limit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main main__content\",\n    children: isOpenAssets ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TableCurrency, {\n        assets: assets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PaginationBlock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"8Xo8iZKUKyjhNF6lQ3vflvKvVYU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["J:/js/cripto/src/components/main/Main.component.js"],"names":["React","useEffect","getCripto","getCurrentCripto","TableCurrency","useDispatch","useSelector","PaginationBlock","Loader","Main","dispatch","assets","activePage","limit","isOpenAssets","state","localStorage","setItem","JSON","stringify","interval","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,gBAAnB,QAA0C,oBAA1C;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAACM,IAAAA,MAAD;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,MAA4CR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACJ,MAAhB,CAA7D;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeP,UAAf,CAA7B;AACA,UAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAMX,QAAQ,CAACR,SAAS,CAACU,UAAD,EAAaC,KAAb,CAAV,CAAf,EAA+C,MAA/C,CAA5B;AACA,WAAO,MAAMS,aAAa,CAACF,QAAD,CAA1B;AACH,GAJQ,EAIN,CAACR,UAAD,EAAaC,KAAb,CAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,cACKC,YAAY,gBACT;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,MAAM,EAAEH;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADS,gBAMT,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CArBD;;GAAMF,I;UACeJ,W,EACiCC,W;;;KAFhDG,I;AAuBN,eAAeA,IAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {getCripto, getCurrentCripto} from \"../../common/fetch\";\r\nimport TableCurrency from \"./components/Table.component\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PaginationBlock from \"./components/Pagination.component\";\r\nimport Loader from \"./components/Loader.component\";\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch();\r\n    const {assets, activePage, limit, isOpenAssets} = useSelector(state => state.assets);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('page', JSON.stringify(activePage ))\r\n        const interval = setInterval(() => dispatch(getCripto(activePage, limit)), 200000);\r\n        return () => clearInterval(interval);\r\n    }, [activePage, limit]);\r\n\r\n    return (\r\n        <div className=\"main main__content\">\r\n            {isOpenAssets ?\r\n                <>\r\n                    <TableCurrency assets={assets}/>\r\n                    <PaginationBlock/>\r\n                </>\r\n                :\r\n                <Loader/>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}