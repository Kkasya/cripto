{"ast":null,"code":"var _jsxFileName = \"J:\\\\js\\\\cripto\\\\src\\\\components\\\\main\\\\Main.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { getCripto } from \"../../common/fetch\";\nimport TableCurrency from \"./components/Table.component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PaginationBlock from \"./components/Pagination.component\";\nimport Loader from \"./components/Loader.component\";\nimport Header from \"../header/Header.component\";\nimport Wallet from \"../wallet/Wallet.component\";\nimport AddingCurrency from \"./components/AddingCurrency.component\";\nimport CurrencyPage from \"../currencyPage/CurrencyPage.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    assets,\n    activePage,\n    limit,\n    isOpenAssets\n  } = useSelector(state => state.assets);\n\n  const getAssets = () => {\n    (async () => {\n      let assetsFetch = await getCripto(activePage, limit);\n\n      while (!assetsFetch) assetsFetch = await getCripto(activePage, limit);\n\n      dispatch({\n        type: \"ADD_ASSETS\",\n        payload: assetsFetch.data\n      });\n      dispatch({\n        type: \"SET_IS_OPEN_ASSETS\",\n        payload: true\n      });\n    })();\n  };\n\n  useEffect(() => {\n    getAssets();\n  }, [activePage]);\n  useEffect(() => {\n    setInterval(getAssets, 10000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main main__content\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [assets.map(item => /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/currency/:id\",\n          render: () => /*#__PURE__*/_jsxDEV(CurrencyPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 43\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: isOpenAssets ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TableCurrency, {\n              assets: assets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(PaginationBlock, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"lUtTbC0YFrD56M+U+voIv5TnU5o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["J:/js/cripto/src/components/main/Main.component.js"],"names":["React","useEffect","BrowserRouter","Router","Switch","Route","getCripto","TableCurrency","useDispatch","useSelector","PaginationBlock","Loader","Header","Wallet","AddingCurrency","CurrencyPage","Main","dispatch","assets","activePage","limit","isOpenAssets","state","getAssets","assetsFetch","type","payload","data","setInterval","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,QAIO,kBAJP;AAMA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAACU,IAAAA,MAAD;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,MAA4CZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACJ,MAAhB,CAA7D;;AAEA,QAAMK,SAAS,GAAG,MAAM;AACpB,KAAC,YAAY;AACT,UAAIC,WAAW,GAAG,MAAMlB,SAAS,CAACa,UAAD,EAAaC,KAAb,CAAjC;;AACA,aAAO,CAACI,WAAR,EAAqBA,WAAW,GAAG,MAAMlB,SAAS,CAACa,UAAD,EAAaC,KAAb,CAA7B;;AACrBH,MAAAA,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAE,YAAP;AAAqBC,QAAAA,OAAO,EAAEF,WAAW,CAACG;AAA1C,OAAD,CAAR;AACAV,MAAAA,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAE,oBAAP;AAA6BC,QAAAA,OAAO,EAAE;AAAtC,OAAD,CAAR;AACH,KALD;AAMH,GAPD;;AASAzB,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,SAAS;AACZ,GAFQ,EAEN,CAACJ,UAAD,CAFM,CAAT;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACZ2B,IAAAA,WAAW,CAACL,SAAD,EAAY,KAAZ,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,MAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACI,QAAC,MAAD;AAAA,mBACKL,MAAM,CAACW,GAAP,CAAYC,IAAD,iBACR,QAAC,KAAD;AAEI,UAAA,IAAI,EAAE,eAFV;AAGI,UAAA,MAAM,EAAE,mBAAM,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAHlB,WACSA,IAAI,CAACC,EADd;AAAA;AAAA;AAAA;AAAA,gBADH,CADL,eAQI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA,oBACKV,YAAY,gBACT;AAAA,oCACI,QAAC,aAAD;AAAe,cAAA,MAAM,EAAEH;AAAvB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,0BADS,gBAMT,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA7CD;;GAAMF,I;UACeR,W,EACiCC,W;;;KAFhDO,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\n\r\nimport {getCripto} from \"../../common/fetch\";\r\nimport TableCurrency from \"./components/Table.component\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PaginationBlock from \"./components/Pagination.component\";\r\nimport Loader from \"./components/Loader.component\";\r\nimport Header from \"../header/Header.component\";\r\nimport Wallet from \"../wallet/Wallet.component\";\r\nimport AddingCurrency from \"./components/AddingCurrency.component\";\r\nimport CurrencyPage from \"../currencyPage/CurrencyPage.component\";\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch();\r\n    const {assets, activePage, limit, isOpenAssets} = useSelector(state => state.assets);\r\n\r\n    const getAssets = () => {\r\n        (async () => {\r\n            let assetsFetch = await getCripto(activePage, limit);\r\n            while (!assetsFetch) assetsFetch = await getCripto(activePage, limit);\r\n            dispatch({type: \"ADD_ASSETS\", payload: assetsFetch.data});\r\n            dispatch({type: \"SET_IS_OPEN_ASSETS\", payload: true});\r\n        })();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAssets();\r\n    }, [activePage]);\r\n\r\n    useEffect(() => {\r\n        setInterval(getAssets, 10000);\r\n    }, []);\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"main main__content\">\r\n                <Switch>\r\n                    {assets.map((item) => (\r\n                        <Route\r\n                            key={item.id}\r\n                            path={\"/currency/:id\"}\r\n                            render={() => <CurrencyPage />}\r\n                        />\r\n                    ))}\r\n                    <Route path=\"/\">\r\n                        {isOpenAssets ?\r\n                            <>\r\n                                <TableCurrency assets={assets}/>\r\n                                <PaginationBlock/>\r\n                            </>\r\n                            :\r\n                            <Loader/>}\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}