{"ast":null,"code":"import _toConsumableArray from\"J:/js/cripto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";var roundSeparateNumber=function roundSeparateNumber(data){var number=Math.abs(Number(data));var options={'trillion':'t','billion':'b','million':'m'};if(number>=1.0e+12){return(number/1.0e+12).toFixed(2)+\"\".concat(options.trillion);}if(number>=1.0e+9){return(number/1.0e+9).toFixed(2)+\"\".concat(options.billion);}if(number>=1.0e+6){return(number/1.0e+6).toFixed(2)+\"\".concat(options.million);}return Number(number.toFixed(2)).toLocaleString('ru');};var getDetails=function getDetails(assetDetails){var assets=_toConsumableArray(assetDetails);var max=assets[0].priceUsd;var min=assets[0].priceUsd;var total=0;assets.forEach(function(asset){max=asset.priceUsd>max?asset.priceUsd:max;min=asset.priceUsd<min?asset.priceUsd:min;total+=Number(asset.priceUsd);});var average=total/assets.length;return{max:max,min:min,average:average};};var getDateTime=function getDateTime(){var options={year:'numeric',month:'long',day:'numeric'};var now=new Date();var startDay=new Date().setUTCHours(0,0,0,0);var start24h=new Date(new Date().getTime()-24*60*60*1000);var date=now.toLocaleDateString(\"en-US\",options);return{now:now,start24h:start24h,startDay:startDay,date:date};};export{roundSeparateNumber,getDetails,getDateTime};","map":{"version":3,"sources":["J:/js/cripto/src/common/utils.js"],"names":["roundSeparateNumber","data","number","Math","abs","Number","options","toFixed","trillion","billion","million","toLocaleString","getDetails","assetDetails","assets","max","priceUsd","min","total","forEach","asset","average","length","getDateTime","year","month","day","now","Date","startDay","setUTCHours","start24h","getTime","date","toLocaleDateString"],"mappings":"2IAAA,GAAMA,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,IAAD,CAAU,CACrC,GAAIC,CAAAA,MAAM,CAAGC,IAAI,CAACC,GAAL,CAASC,MAAM,CAACJ,IAAD,CAAf,CAAb,CAEA,GAAMK,CAAAA,OAAO,CAAG,CAChB,WAAY,GADI,CAEhB,UAAW,GAFK,CAGhB,UAAW,GAHK,CAAhB,CAMA,GAAIJ,MAAM,EAAI,OAAd,CAAuB,CACtB,MAAO,CAACA,MAAM,CAAG,OAAV,EAAmBK,OAAnB,CAA2B,CAA3B,YAAmCD,OAAO,CAACE,QAA3C,CAAP,CACA,CAED,GAAIN,MAAM,EAAI,MAAd,CAAsB,CACrB,MAAO,CAACA,MAAM,CAAG,MAAV,EAAkBK,OAAlB,CAA0B,CAA1B,YAAkCD,OAAO,CAACG,OAA1C,CAAP,CACA,CAED,GAAIP,MAAM,EAAI,MAAd,CAAsB,CACrB,MAAO,CAACA,MAAM,CAAG,MAAV,EAAkBK,OAAlB,CAA0B,CAA1B,YAAkCD,OAAO,CAACI,OAA1C,CAAP,CACA,CAED,MAAOL,CAAAA,MAAM,CAAEH,MAAM,CAACK,OAAP,CAAe,CAAf,CAAF,CAAN,CAA4BI,cAA5B,CAA2C,IAA3C,CAAP,CACA,CAtBD,CAwBA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,YAAD,CAAkB,CAEpC,GAAMC,CAAAA,MAAM,oBAAOD,YAAP,CAAZ,CACA,GAAIE,CAAAA,GAAG,CAAGD,MAAM,CAAC,CAAD,CAAN,CAAUE,QAApB,CACA,GAAIC,CAAAA,GAAG,CAAGH,MAAM,CAAC,CAAD,CAAN,CAAUE,QAApB,CACA,GAAIE,CAAAA,KAAK,CAAG,CAAZ,CAEAJ,MAAM,CAACK,OAAP,CAAe,SAACC,KAAD,CAAW,CACzBL,GAAG,CAAIK,KAAK,CAACJ,QAAN,CAAiBD,GAAlB,CAAyBK,KAAK,CAACJ,QAA/B,CAA0CD,GAAhD,CACAE,GAAG,CAAIG,KAAK,CAACJ,QAAN,CAAiBC,GAAlB,CAAyBG,KAAK,CAACJ,QAA/B,CAA0CC,GAAhD,CACAC,KAAK,EAAIb,MAAM,CAACe,KAAK,CAACJ,QAAP,CAAf,CACA,CAJD,EAKA,GAAMK,CAAAA,OAAO,CAAGH,KAAK,CAAGJ,MAAM,CAACQ,MAA/B,CAEA,MAAO,CAACP,GAAG,CAAHA,GAAD,CAAME,GAAG,CAAHA,GAAN,CAAWI,OAAO,CAAPA,OAAX,CAAP,CACA,CAfD,CAiBA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACzB,GAAMjB,CAAAA,OAAO,CAAG,CAACkB,IAAI,CAAE,SAAP,CAAkBC,KAAK,CAAE,MAAzB,CAAiCC,GAAG,CAAE,SAAtC,CAAhB,CACA,GAAMC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,EAAZ,CACA,GAAMC,CAAAA,QAAQ,CAAI,GAAID,CAAAA,IAAJ,EAAD,CAAaE,WAAb,CAAyB,CAAzB,CAA4B,CAA5B,CAA+B,CAA/B,CAAkC,CAAlC,CAAjB,CACA,GAAMC,CAAAA,QAAQ,CAAG,GAAIH,CAAAA,IAAJ,CAAS,GAAIA,CAAAA,IAAJ,GAAWI,OAAX,GAAwB,GAAK,EAAL,CAAU,EAAV,CAAe,IAAhD,CAAjB,CACA,GAAMC,CAAAA,IAAI,CAAGN,GAAG,CAACO,kBAAJ,CAAuB,OAAvB,CAAgC5B,OAAhC,CAAb,CAEA,MAAO,CAAEqB,GAAG,CAAHA,GAAF,CAAOI,QAAQ,CAARA,QAAP,CAAiBF,QAAQ,CAARA,QAAjB,CAA2BI,IAAI,CAAJA,IAA3B,CAAP,CACA,CARD,CAUA,OAAQjC,mBAAR,CAA6BY,UAA7B,CAAyCW,WAAzC","sourcesContent":["const roundSeparateNumber = (data) => {\r\n\tlet number = Math.abs(Number(data));\r\n\r\n\tconst options = {\r\n\t'trillion': 't',\r\n\t'billion': 'b',\r\n\t'million': 'm',\r\n};\r\n\r\n\tif (number >= 1.0e+12) {\r\n\t\treturn (number / 1.0e+12).toFixed(2) + `${options.trillion}`;\r\n\t}\r\n\r\n\tif (number >= 1.0e+9) {\r\n\t\treturn (number / 1.0e+9).toFixed(2) + `${options.billion}`;\r\n\t}\r\n\r\n\tif (number >= 1.0e+6) {\r\n\t\treturn (number / 1.0e+6).toFixed(2) + `${options.million}`;\r\n\t}\r\n\r\n\treturn Number((number.toFixed(2))).toLocaleString('ru');\r\n};\r\n\r\nconst getDetails = (assetDetails) => {\r\n\r\n\tconst assets = [...assetDetails];\r\n\tlet max = assets[0].priceUsd;\r\n\tlet min = assets[0].priceUsd;\r\n\tlet total = 0;\r\n\r\n\tassets.forEach((asset) => {\r\n\t\tmax = (asset.priceUsd > max) ? asset.priceUsd : max;\r\n\t\tmin = (asset.priceUsd < min) ? asset.priceUsd : min;\r\n\t\ttotal += Number(asset.priceUsd);\r\n\t});\r\n\tconst average = total / assets.length;\r\n\r\n\treturn {max, min, average};\r\n};\r\n\r\nconst getDateTime = () => {\r\n\tconst options = {year: 'numeric', month: 'long', day: 'numeric'};\r\n\tconst now = new Date();\r\n\tconst startDay = (new Date()).setUTCHours(0, 0, 0, 0);\r\n\tconst start24h = new Date(new Date().getTime() - (24 * 60 * 60 * 1000));\r\n\tconst date = now.toLocaleDateString(\"en-US\", options);\r\n\r\n\treturn { now, start24h, startDay, date};\r\n}\r\n\r\nexport {roundSeparateNumber, getDetails, getDateTime};"]},"metadata":{},"sourceType":"module"}