{"ast":null,"code":"var _jsxFileName = \"J:\\\\js\\\\cripto\\\\src\\\\components\\\\main\\\\Main.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { getCripto, getCurrentCripto } from \"../../common/fetch\";\nimport TableCurrency from \"./components/Table.component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PaginationBlock from \"./components/Pagination.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    assets,\n    activePage,\n    limit,\n    isOpenAssets\n  } = useSelector(state => state.assets);\n\n  const getAssets = () => {\n    (async () => {\n      let assetsFetch = await getCripto(activePage, limit);\n\n      while (!assetsFetch) assetsFetch = await getCripto(activePage, limit);\n\n      assetsFetch && dispatch({\n        type: \"ADD_ASSETS\",\n        payload: assetsFetch.data\n      });\n      assetsFetch && dispatch({\n        type: \"SET_IS_OPEN_ASSETS\",\n        payload: true\n      });\n    })();\n  };\n\n  useEffect(() => {\n    getAssets();\n  }, [activePage]);\n  useEffect(() => {\n    setInterval(getAssets, 10000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main main__content\",\n    children: [console.log('-------', assets), isOpenAssets && /*#__PURE__*/_jsxDEV(TableCurrency, {\n      assets: assets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(PaginationBlock, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Main, \"lUtTbC0YFrD56M+U+voIv5TnU5o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["J:/js/cripto/src/components/main/Main.component.js"],"names":["React","useEffect","getCripto","getCurrentCripto","TableCurrency","useDispatch","useSelector","PaginationBlock","Main","dispatch","assets","activePage","limit","isOpenAssets","state","getAssets","assetsFetch","type","payload","data","setInterval","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,gBAAnB,QAA0C,oBAA1C;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAACK,IAAAA,MAAD;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,MAA4CP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACJ,MAAhB,CAA7D;;AAEA,QAAMK,SAAS,GAAG,MAAM;AACvB,KAAC,YAAY;AACZ,UAAIC,WAAW,GAAG,MAAMd,SAAS,CAACS,UAAD,EAAaC,KAAb,CAAjC;;AACA,aAAO,CAACI,WAAR,EAAqBA,WAAW,GAAG,MAAMd,SAAS,CAACS,UAAD,EAAaC,KAAb,CAA7B;;AACrBI,MAAAA,WAAW,IAAIP,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAE,YAAP;AAAqBC,QAAAA,OAAO,EAAEF,WAAW,CAACG;AAA1C,OAAD,CAAvB;AACAH,MAAAA,WAAW,IAAIP,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAE,oBAAP;AAA6BC,QAAAA,OAAO,EAAE;AAAtC,OAAD,CAAvB;AACA,KALD;AAMA,GAPD;;AASAjB,EAAAA,SAAS,CAAC,MAAM;AACfc,IAAAA,SAAS;AACT,GAFQ,EAEN,CAACJ,UAAD,CAFM,CAAT;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACfmB,IAAAA,WAAW,CAACL,SAAD,EAAY,KAAZ,CAAX;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,eACEM,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,MAAvB,CADF,EAEEG,YAAY,iBAAI,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEH;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFlB,eAGC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CA5BD;;GAAMF,I;UACYH,W,EACiCC,W;;;KAF7CE,I;AA8BN,eAAeA,IAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {getCripto, getCurrentCripto} from \"../../common/fetch\";\r\nimport TableCurrency from \"./components/Table.component\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PaginationBlock from \"./components/Pagination.component\";\r\n\r\nconst Main = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst {assets, activePage, limit, isOpenAssets} = useSelector(state => state.assets);\r\n\r\n\tconst getAssets = () => {\r\n\t\t(async () => {\r\n\t\t\tlet assetsFetch = await getCripto(activePage, limit);\r\n\t\t\twhile (!assetsFetch) assetsFetch = await getCripto(activePage, limit);\r\n\t\t\tassetsFetch && dispatch({type: \"ADD_ASSETS\", payload: assetsFetch.data});\r\n\t\t\tassetsFetch && dispatch({type: \"SET_IS_OPEN_ASSETS\", payload: true});\r\n\t\t})();\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAssets();\r\n\t}, [activePage]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInterval(getAssets, 10000);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"main main__content\">\r\n\t\t\t{console.log('-------', assets)}\r\n\t\t\t{isOpenAssets && <TableCurrency assets={assets}/>}\r\n\t\t\t<PaginationBlock />\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}