{"ast":null,"code":"var _jsxFileName = \"J:\\\\js\\\\cripto\\\\src\\\\components\\\\main\\\\components\\\\ItemTable.component.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { getDetails, roundSeparateNumber } from \"../../../common/utils\";\nimport { getCurrentCripto } from \"../../../common/fetch\";\nimport { LineChart, CartesianGrid, Line, Tooltip, XAxis, YAxis } from \"recharts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ItemTableCurrency = ({\n  asset\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    assets24h,\n    details,\n    isOpen\n  } = useSelector(state => state.details);\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  const now = new Date();\n  const startDay = new Date().setUTCHours(0, 0, 0, 0);\n  const start24h = new Date(new Date().getTime() - 24 * 60 * 60 * 1000);\n  const date = now.toLocaleDateString(\"en-US\", options);\n\n  const openDetails = () => {\n    (async () => {\n      if (isOpen === asset.id) {\n        dispatch({\n          type: \"SET_IS_OPEN\",\n          payload: ''\n        });\n      } else {\n        let assetsFetch = 0;\n\n        while (!assetsFetch) assetsFetch = await getCurrentCripto(asset.id, startDay, now.getTime());\n\n        let assets24h = 0;\n\n        while (!assets24h) await getCurrentCripto(asset.id, start24h.getTime(), now.getTime());\n\n        dispatch({\n          type: \"ADD_ASSETS_24h\",\n          payload: assets24h.data\n        });\n        dispatch({\n          type: \"ADD_DETAILS\",\n          payload: getDetails(assetsFetch.data)\n        });\n        dispatch({\n          type: \"SET_IS_OPEN\",\n          payload: asset.id\n        });\n      }\n    })();\n  };\n\n  const formatYAxis = tickItem => {\n    return Number(tickItem).toFixed();\n  };\n\n  const formatXAxis = tickItem => {\n    const hour = new Date(tickItem).getHours();\n    return `${hour}h`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      onClick: openDetails,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: asset.rank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: asset.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.priceUsd)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.marketCapUsd)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.vwap24Hr)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.supply)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", roundSeparateNumber(asset.volumeUsd24Hr)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [roundSeparateNumber(asset.changePercent24Hr), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), isOpen === asset.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"subTable__row\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          rowSpan: 2,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://assets.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: [asset.name, \" (\", asset.symbol, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: [\"HIGH: $\", roundSeparateNumber(details.max)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          rowSpan: 2,\n          className: \"align-middle\",\n          children: [\"AVERAGE: $\", roundSeparateNumber(details.average)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"subTable__row\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: [\"LOW: $\", roundSeparateNumber(details.min)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), console.log('assets24h', assets24h), /*#__PURE__*/_jsxDEV(\"tr\", {\n        colSpan: 8,\n        className: \"align-middle\",\n        children: assets24h && assets24h.length && /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 800,\n          height: 400,\n          data: assets24h,\n          margin: {\n            top: 5,\n            right: 20,\n            left: 10,\n            bottom: 5\n          },\n          useInteractiveGuideline: true,\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\",\n            tickFormatter: formatXAxis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            showMaxMin: false,\n            tickCount: 20,\n            tickFormatter: formatYAxis,\n            type: \"number\",\n            domain: [details.min, details.max]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            activeDot: {\n              r: 8\n            },\n            type: \"monotone\",\n            dataKey: \"priceUsd\",\n            stroke: \"#ff7300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), \"/>\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(ItemTableCurrency, \"OrWsJFuXXZqLcS7BZXVicZwPDW8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ItemTableCurrency;\nexport default ItemTableCurrency;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemTableCurrency\");","map":{"version":3,"sources":["J:/js/cripto/src/components/main/components/ItemTable.component.js"],"names":["React","getDetails","roundSeparateNumber","getCurrentCripto","LineChart","CartesianGrid","Line","Tooltip","XAxis","YAxis","useDispatch","useSelector","ItemTableCurrency","asset","dispatch","assets24h","details","isOpen","state","options","year","month","day","now","Date","startDay","setUTCHours","start24h","getTime","date","toLocaleDateString","openDetails","id","type","payload","assetsFetch","data","formatYAxis","tickItem","Number","toFixed","formatXAxis","hour","getHours","rank","name","priceUsd","marketCapUsd","vwap24Hr","supply","volumeUsd24Hr","changePercent24Hr","symbol","toLowerCase","max","average","min","console","log","length","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {getDetails, roundSeparateNumber} from \"../../../common/utils\";\r\nimport {getCurrentCripto} from \"../../../common/fetch\";\r\nimport {\r\n    LineChart,\r\n    CartesianGrid,\r\n    Line,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis\r\n} from \"recharts\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst ItemTableCurrency = ({asset}) => {\r\n        const dispatch = useDispatch();\r\n        const {assets24h, details, isOpen} = useSelector(state => state.details);\r\n\r\n        const options = {year: 'numeric', month: 'long', day: 'numeric'};\r\n        const now = new Date();\r\n        const startDay = (new Date()).setUTCHours(0, 0, 0, 0);\r\n        const start24h = new Date(new Date().getTime() - (24 * 60 * 60 * 1000));\r\n        const date = now.toLocaleDateString(\"en-US\", options);\r\n\r\n        const openDetails = () => {\r\n            (async () => {\r\n                if (isOpen === asset.id) {\r\n                    dispatch({type: \"SET_IS_OPEN\", payload: ''})\r\n                } else {\r\n                    let assetsFetch = 0;\r\n                    while (!assetsFetch) assetsFetch = await getCurrentCripto(asset.id, startDay, now.getTime());\r\n                    let assets24h = 0;\r\n                    while (!assets24h) await getCurrentCripto(asset.id, start24h.getTime(), now.getTime());\r\n                    dispatch({type: \"ADD_ASSETS_24h\", payload: assets24h.data});\r\n                    dispatch({type: \"ADD_DETAILS\", payload: getDetails(assetsFetch.data)});\r\n                    dispatch({type: \"SET_IS_OPEN\", payload: asset.id});\r\n                }\r\n            })();\r\n        };\r\n\r\n        const formatYAxis = (tickItem) => {\r\n            return Number(tickItem).toFixed();\r\n        };\r\n\r\n        const formatXAxis = (tickItem) => {\r\n            const hour = (new Date(tickItem)).getHours();\r\n            return `${hour}h`;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <tr onClick={openDetails}>\r\n                    <td>{asset.rank}</td>\r\n                    <td>{asset.name}</td>\r\n                    <td>${roundSeparateNumber(asset.priceUsd)}</td>\r\n                    <td>${roundSeparateNumber(asset.marketCapUsd)}</td>\r\n                    <td>${roundSeparateNumber(asset.vwap24Hr)}</td>\r\n                    <td>${roundSeparateNumber(asset.supply)}</td>\r\n                    <td>${roundSeparateNumber(asset.volumeUsd24Hr)}</td>\r\n                    <td>{roundSeparateNumber(asset.changePercent24Hr)}%</td>\r\n                </tr>\r\n                {(isOpen === asset.id) && <>\r\n                    <tr className=\"subTable__row\">\r\n                        <td colSpan={2} rowSpan={2}>\r\n                            <img src={`https://assets.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`}/>\r\n                        </td>\r\n                        <td colSpan={2}>\r\n                            {asset.name} ({asset.symbol})\r\n                        </td>\r\n                        <td colSpan={2}>HIGH: ${roundSeparateNumber(details.max)}</td>\r\n                        <td colSpan={2} rowSpan={2} className=\"align-middle\">AVERAGE:\r\n                            ${roundSeparateNumber(details.average)}</td>\r\n                    </tr>\r\n                    <tr className=\"subTable__row\">\r\n                        <td colSpan={2}>{date}</td>\r\n                        <td colSpan={2}>LOW: ${roundSeparateNumber(details.min)}</td>\r\n                    </tr>\r\n                    {console.log('assets24h', assets24h)}\r\n                    <tr colSpan={8} className=\"align-middle\">\r\n                        {assets24h && assets24h.length && <LineChart\r\n                            width={800}\r\n                            height={400}\r\n                            data={assets24h}\r\n                            margin={{top: 5, right: 20, left: 10, bottom: 5}}\r\n                            useInteractiveGuideline={true}\r\n                        >\r\n                            <XAxis dataKey=\"date\" tickFormatter={formatXAxis}/>\r\n                            <YAxis showMaxMin={false} tickCount={20} tickFormatter={formatYAxis} type=\"number\"\r\n                                   domain={[details.min, details.max]}/>\r\n                            <Tooltip/>\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <Line activeDot={{r: 8}} type=\"monotone\" dataKey=\"priceUsd\" stroke=\"#ff7300\"/>\r\n                            />\r\n                        </LineChart>}\r\n                    </tr>\r\n                </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n;\r\n\r\nexport default ItemTableCurrency;"]},"metadata":{},"sourceType":"module"}