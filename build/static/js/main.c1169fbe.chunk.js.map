{"version":3,"sources":["store/assetReducer.js","store/detailsReducer.js","common/utils.js","common/fetch.js","store/walletReducer.js","components/main/components/ItemTable.component.js","components/main/components/Table.component.js","components/main/components/Pagination.component.js","components/main/components/Loader.component.js","components/main/Main.component.js","components/header/Header.component.js","components/wallet/components/ItemTableWalletCurrency.js","components/wallet/components/TableWalletCurrency.component.js","components/wallet/Wallet.component.js","components/main/components/AddingCurrency.component.js","components/main/components/Chart.component.js","components/currencyPage/CurrencyPage.component.js","components/app/App.js","store/index.js","index.js"],"names":["activePage","JSON","parse","localStorage","getItem","defaultState","assets","allAssets","isOpenAssets","limit","assetReducer","state","action","type","payload","assets24h","details","addAssets24","detailsReducer","roundSeparateNumber","data","number","Number","options","toFixed","toLocaleString","getDetails","assetDetails","max","priceUsd","min","total","forEach","asset","average","length","getCurrentCripto","id","start","end","isDetails","dispatch","a","axios","get","params","interval","response","currency","addedCurrency","changeWallet","isOpenAddingWallet","isOpenWallet","addCurrentCurrency","setIsOpenAddingWallet","setIsOpenWallet","walletReducer","tempState","sameCurrency","filter","item","price","count","summary","ItemTableCurrency","useDispatch","history","useHistory","onClick","e","target","classList","contains","push","className","rank","name","marketCapUsd","vwap24Hr","supply","volumeUsd24Hr","changePercent24Hr","Badge","bg","TableCurrency","Table","hover","responsive","map","pages","Array","from","keys","x","PaginationBlock","useSelector","Pagination","page","Item","active","Loader","Main","useEffect","setItem","stringify","setInterval","offset","getCripto","clearInterval","Header","popularCripto","slice","wallet","summaryCurrency","ListGroup","horizontal","cripto","symbol","Button","variant","ItemTableWalletCurrency","index","TableWalletCurrency","borderless","Wallet","closeWallet","Modal","show","onHide","size","centered","closeButton","Title","Body","Footer","AddingCurrency","useState","setCount","InputGroup","Text","FormControl","placeholder","step","value","onChange","newCurrencyItem","Chart","formatYAxis","tickItem","ResponsiveContainer","width","height","LineChart","margin","top","bottom","useInteractiveGuideline","XAxis","dataKey","tickFormatter","hour","Date","getHours","YAxis","showMaxMin","tickCount","domain","Tooltip","CartesianGrid","strokeDasharray","Line","activeDot","r","stroke","CurrencyPage","now","startDay","setUTCHours","start24h","getTime","date","toLocaleDateString","year","month","day","getDateTime","useParams","find","interval1","interval2","Object","src","toLowerCase","alt","to","App","basename","path","render","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c1169fbe.chunk.js","sourcesContent":["const activePage = JSON.parse(localStorage.getItem('page')) || 1;\r\nconst allAssets = JSON.parse(localStorage.getItem('allAssets')) || [];\r\n\r\nconst defaultState = {\r\n\tassets: [],\r\n\tallAssets: allAssets,\r\n\tactivePage: activePage,\r\n\tisOpenAssets: false,\r\n\tlimit: 10,\r\n};\r\n\r\nconst assetReducer = (state = defaultState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase \"ADD_ASSETS\":\r\n\t\t\treturn {...state, assets: action.payload, isOpenAssets: true};\r\n\t\tcase \"ADD_ALL_ASSETS\":\r\n\t\t\treturn {...state, allAssets: action.payload, isOpenAssets: true};\r\n\t\tcase \"SET_PAGE\":\r\n\t\t\treturn {...state, activePage: action.payload};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst addAssets = (payload) => ({type: \"ADD_ASSETS\", payload});\r\nconst addAllAssets = (payload) => ({type: \"ADD_ALL_ASSETS\", payload});\r\nconst setPage = (payload) => ({type: \"SET_PAGE\", payload});\r\n\r\nexport default assetReducer;\r\nexport {addAssets, setPage, addAllAssets};","const defaultState = {\r\n    assets24h: [],\r\n    details: {},\r\n};\r\n\r\nconst detailsReducer = (state = defaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_ASSETS_24h\":\r\n            return {...state, assets24h: action.payload};\r\n        case \"ADD_DETAILS\":\r\n            return {...state, details: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst addAssets24 = (payload) => ({type: \"ADD_ASSETS_24h\", payload});\r\nconst addDetails = (payload) => ({type: \"ADD_DETAILS\", payload});\r\n\r\nexport default detailsReducer;\r\nexport {addAssets24, addDetails};","const roundSeparateNumber = (data) => {\r\n\tlet number = Number(data);\r\n\r\n\tconst options = {\r\n\t'trillion': 't',\r\n\t'billion': 'b',\r\n\t'million': 'm',\r\n};\r\n\r\n\tif (number >= 1.0e+12) {\r\n\t\treturn (number / 1.0e+12).toFixed(2) + `${options.trillion}`;\r\n\t}\r\n\r\n\tif (number >= 1.0e+9) {\r\n\t\treturn (number / 1.0e+9).toFixed(2) + `${options.billion}`;\r\n\t}\r\n\r\n\tif (number >= 1.0e+6) {\r\n\t\treturn (number / 1.0e+6).toFixed(2) + `${options.million}`;\r\n\t}\r\n\r\n\tif (number < 0.01) {\r\n\t\treturn number.toFixed(4);\r\n\t}\r\n\r\n\treturn Number((number.toFixed(2))).toLocaleString('ru');\r\n};\r\n\r\nconst getDetails = (assetDetails) => {\r\n\r\n\tconst assets = [...assetDetails];\r\n\tlet max = assets[0].priceUsd;\r\n\tlet min = assets[0].priceUsd;\r\n\tlet total = 0;\r\n\r\n\tassets.forEach((asset) => {\r\n\t\tmax = (asset.priceUsd > max) ? asset.priceUsd : max;\r\n\t\tmin = (asset.priceUsd < min) ? asset.priceUsd : min;\r\n\t\ttotal += Number(asset.priceUsd);\r\n\t});\r\n\tconst average = total / assets.length;\r\n\r\n\treturn {max, min, average};\r\n};\r\n\r\nconst getDateTime = () => {\r\n\tconst options = {year: 'numeric', month: 'long', day: 'numeric'};\r\n\tconst now = new Date();\r\n\tconst startDay = (new Date()).setUTCHours(0, 0, 0, 0);\r\n\tconst start24h = new Date(new Date().getTime() - (24 * 60 * 60 * 1000));\r\n\tconst date = now.toLocaleDateString(\"en-US\", options);\r\n\r\n\treturn { now, start24h, startDay, date};\r\n}\r\n\r\nexport {roundSeparateNumber, getDetails, getDateTime};","import axios from \"axios\";\r\nimport {addAllAssets, addAssets} from \"../store/assetReducer\";\r\nimport {addAssets24, addDetails} from \"../store/detailsReducer\";\r\nimport {getDetails} from \"./utils\";\r\n\r\nconst getAllCripto = () => {\r\n    return async (dispatch) => {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets');\r\n        dispatch(addAllAssets(response.data.data));\r\n    }\r\n};\r\n\r\nconst getCripto = (page, limit) => {\r\n    return async (dispatch) => {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets', {\r\n            params: {\r\n                limit: limit,\r\n                offset: (page - 1) * limit,\r\n            }\r\n        });\r\n        dispatch(addAssets(response.data.data));\r\n    }\r\n};\r\n\r\nconst getCurrentCripto = (id, start, end, isDetails) => {\r\n    return async (dispatch) => {\r\n        const response = await axios.get(`https://api.coincap.io/v2/assets/${id}/history`, {\r\n            params: {\r\n                interval: 'h1',\r\n                start: start,\r\n                end: end,\r\n            }\r\n        });\r\n        if (isDetails) {\r\n            dispatch(addDetails(getDetails(response.data.data)));\r\n        } else dispatch(addAssets24(response.data.data));\r\n    }\r\n};\r\n\r\nexport {getCripto, getCurrentCripto, getAllCripto};","const currency = JSON.parse(localStorage.getItem('currency')) || [];\r\nconst changeWallet = JSON.parse(localStorage.getItem('changeWallet')) || null;\r\n\r\nconst defaultState = {\r\n    currency: currency,\r\n    addedCurrency: {},\r\n    changeWallet: changeWallet,\r\n    isOpenAddingWallet: false,\r\n    isOpenWallet: false,\r\n};\r\n\r\nconst walletReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_CURRENCY\":\r\n            const tempState = [...state.currency];\r\n            const sameCurrency = tempState.filter((item) => item.id === action.payload.id && Number(item.price) === Number(action.payload.price));\r\n            if (sameCurrency.length) {\r\n                sameCurrency[0].count = Number(sameCurrency[0].count) + Number(action.payload.count);\r\n                sameCurrency[0].summary = Number(sameCurrency[0].summary) + Number(action.payload.summary);\r\n\r\n                return {\r\n                    ...state,\r\n                    currency: [...tempState],\r\n                    changeWallet: action.payload.summary\r\n                };\r\n            } else return {\r\n                ...state, currency: [...state.currency, action.payload],\r\n                changeWallet: action.payload.summary\r\n            };\r\n        case \"DELETE_CURRENT_CURRENCY\":\r\n            return {\r\n                ...state, changeWallet: -Number(action.payload.summary),\r\n                currency: [...state.currency].filter((item) =>\r\n                    !(item.id === action.payload.id && Number(item.price) === Number(action.payload.price)))\r\n            }\r\n        case \"ADD_CURRENT_CURRENCY\":\r\n            return {...state, addedCurrency: action.payload};\r\n        case \"SET_IS_OPEN_ADDING_WALLET\":\r\n            return {...state, isOpenAddingWallet: action.payload};\r\n        case \"SET_IS_OPEN_WALLET\":\r\n            return {...state, isOpenWallet: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst addCurrency = (payload) => ({type: \"ADD_CURRENCY\", payload});\r\nconst deleteCurrentCurrency = (payload) => ({type: \"DELETE_CURRENT_CURRENCY\", payload});\r\nconst addCurrentCurrency = (payload) => ({type: \"ADD_CURRENT_CURRENCY\", payload});\r\nconst setIsOpenAddingWallet = (payload) => ({type: \"SET_IS_OPEN_ADDING_WALLET\", payload});\r\nconst setIsOpenWallet = (payload) => ({type: \"SET_IS_OPEN_WALLET\", payload});\r\n\r\nexport default walletReducer;\r\nexport {addCurrency, deleteCurrentCurrency, addCurrentCurrency, setIsOpenAddingWallet, setIsOpenWallet};","import React from \"react\";\r\nimport {roundSeparateNumber} from \"../../../common/utils\";\r\nimport {Badge} from \"react-bootstrap\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addCurrentCurrency, setIsOpenAddingWallet} from \"../../../store/walletReducer\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst ItemTableCurrency = ({asset}) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const openAddToWallet = () => {\r\n        dispatch(setIsOpenAddingWallet(true));\r\n        dispatch(addCurrentCurrency(asset));\r\n    };\r\n\r\n    const gotoCurrentCurrency = (e) => {\r\n        if (!e.target.classList.contains('badge')) {\r\n            history.push(`currency/${asset.id}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <tr onClick={gotoCurrentCurrency} className=\"table__row\">\r\n            <td> {asset.rank} </td>\r\n            <td> {asset.name}</td>\r\n            <td>${roundSeparateNumber(asset.priceUsd)}</td>\r\n            <td> ${roundSeparateNumber(asset.marketCapUsd)}</td>\r\n            <td>${roundSeparateNumber(asset.vwap24Hr)}</td>\r\n            <td>${roundSeparateNumber(asset.supply)}</td>\r\n            <td>${roundSeparateNumber(asset.volumeUsd24Hr)}</td>\r\n            <td>{Number(asset.changePercent24Hr).toFixed(2)}%</td>\r\n            <span className=\"button button__add\"><Badge bg=\"info\" onClick={openAddToWallet}>+</Badge></span>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default ItemTableCurrency;","import React from 'react';\r\nimport Table from \"react-bootstrap/Table\";\r\nimport ItemTableCurrency from \"./ItemTable.component\";\r\n\r\nconst TableCurrency = ({assets}) => {\r\n\treturn (\r\n\t\t<Table hover responsive>\r\n\t\t\t<thead >\r\n\t\t\t<tr >\r\n\t\t\t\t<th >Rank</th >\r\n\t\t\t\t<th >Name</th >\r\n\t\t\t\t<th >Price</th >\r\n\t\t\t\t<th >Market Cap</th >\r\n\t\t\t\t<th >VWAP(24Hr)</th >\r\n\t\t\t\t<th >Supply</th >\r\n\t\t\t\t<th >Volume(24Hr)</th >\r\n\t\t\t\t<th >Change(24Hr)</th >\r\n\t\t\t\t<th ></th>\r\n\t\t\t</tr >\r\n\t\t\t</thead >\r\n\t\t\t<tbody >\r\n\t\t\t{assets.map((asset) =>\r\n\t\t\t\t<ItemTableCurrency key={asset.id} asset={asset} />)\r\n\t\t\t}\r\n\t\t\t</tbody >\r\n\t\t</Table >\r\n\r\n\t)\r\n};\r\n\r\nexport default TableCurrency;","import React from 'react';\r\nimport {Pagination} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setPage} from \"../../../store/assetReducer\";\r\n\r\nconst pages = Array.from(Array(10).keys()).map(x => x+1);\r\n\r\nconst PaginationBlock = () => {\r\n    const dispatch = useDispatch();\r\n    const {activePage} = useSelector(state => state.assets);\r\n\r\n    return (\r\n        <Pagination className=\"centeredBlock flex-wrap\">\r\n            {pages.map((page) =>\r\n                <Pagination.Item key={page} active={page === activePage} onClick={()=>dispatch(setPage(page))} >\r\n                    {page}\r\n                </Pagination.Item>)}\r\n        </Pagination>\r\n    )\r\n};\r\n\r\nexport default PaginationBlock;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return <div className=\"centeredAllBlock\">\r\n        <div className=\"loader\"></div>\r\n    </div>\r\n};\r\n\r\nexport default Loader;","import React, {useEffect} from 'react';\r\nimport {getCripto} from \"../../common/fetch\";\r\nimport TableCurrency from \"./components/Table.component\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PaginationBlock from \"./components/Pagination.component\";\r\nimport Loader from \"./components/Loader.component\";\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch();\r\n    const {assets, activePage, limit, isOpenAssets} = useSelector(state => state.assets);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('page', JSON.stringify(activePage ))\r\n        const interval = setInterval(() => dispatch(getCripto(activePage, limit)), 2000);\r\n        return () => clearInterval(interval);\r\n    }, [activePage, limit]);\r\n\r\n    return (\r\n        <div className=\"main main__content\">\r\n            {isOpenAssets ?\r\n                <>\r\n                    <TableCurrency assets={assets}/>\r\n                    <PaginationBlock/>\r\n                </>\r\n                :\r\n                <Loader/>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Main;","import React, {useEffect} from 'react';\r\nimport {Badge, ListGroup, Button} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {roundSeparateNumber} from \"../../common/utils\";\r\nimport {setIsOpenWallet} from \"../../store/walletReducer\";\r\nimport {getAllCripto, getCripto, getCurrentCripto} from \"../../common/fetch\";\r\n\r\nconst Header = () => {\r\n    const {allAssets} = useSelector(state => state.assets);\r\n    const popularCripto = allAssets.slice(0, 3);\r\n    const dispatch = useDispatch();\r\n    const {currency, changeWallet} = useSelector(state => state.wallet);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('currency', JSON.stringify(currency ))\r\n    }, [currency]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('changeWallet', JSON.stringify(changeWallet ))\r\n    }, [changeWallet]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('allAssets', JSON.stringify(allAssets ))\r\n    }, [allAssets]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => dispatch(getAllCripto()), 10000);\r\n        return () =>  clearInterval(interval);\r\n    }, []);\r\n\r\n    const summaryCurrency = () => {\r\n        let summary = 0;\r\n        [...currency].forEach((item) => {\r\n            summary += item.summary;\r\n        });\r\n        return summary;\r\n    };\r\n\r\n    const summary = summaryCurrency();\r\n\r\n    const changePercent = () => {\r\n        const prevSummary = summary === changeWallet ? changeWallet : summary - changeWallet;\r\n        return changeWallet ? (changeWallet * 100 / prevSummary).toFixed() : 0\r\n    };\r\n\r\n    const openWallet = () => {\r\n        dispatch(setIsOpenWallet(true));\r\n    };\r\n\r\n    return (\r\n        <div className=\"header header__content\">\r\n            {allAssets && <ListGroup horizontal className=\"popularCripto__content\">\r\n                {popularCripto.map((cripto) =>\r\n                    <ListGroup.Item className=\"border-0 popularCripto__item\" key={cripto.symbol}>\r\n                        <span className=\"popularCripto__name\">{cripto.name} ({cripto.symbol})</span>\r\n                        <Badge bg=\"primary\">${roundSeparateNumber(cripto.marketCapUsd)}</Badge>\r\n                    </ListGroup.Item>\r\n                )}\r\n            </ListGroup>}\r\n            <Button variant=\"info\" onClick={openWallet} className=\"wallet__info\">\r\n                <span>Wallet: </span>\r\n                <span>{roundSeparateNumber(summary)} USD </span>\r\n                <span>{changeWallet < 0 ? `-${roundSeparateNumber(changeWallet)}` : `+${roundSeparateNumber(changeWallet)}`}\r\n                ({changePercent()} %) </span>\r\n            </Button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {roundSeparateNumber} from \"../../../common/utils\";\r\nimport {Badge} from \"react-bootstrap\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteCurrentCurrency} from \"../../../store/walletReducer\";\r\n\r\nconst ItemTableWalletCurrency = ({currency, index}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteCurrent = () => {\r\n        dispatch(deleteCurrentCurrency(currency));\r\n    };\r\n               return (\r\n            <>\r\n                <tr >\r\n                    <td>{index}</td>\r\n                    <td>{currency.name}</td>\r\n                    <td>${roundSeparateNumber(currency.price)}</td>\r\n                    <td>{currency.count}</td>\r\n                    <td>${roundSeparateNumber(currency.summary)}</td>\r\n                    <td className=\"centeredAllBlock button\" onClick={deleteCurrent}><Badge bg=\"info\">-</Badge></td>\r\n                </tr>\r\n\r\n            </>\r\n        );\r\n    };\r\n\r\nexport default ItemTableWalletCurrency;","import React from 'react';\r\nimport Table from \"react-bootstrap/Table\";\r\nimport ItemTableWalletCurrency from \"./ItemTableWalletCurrency\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst TableWalletCurrency = () => {\r\n    const {currency} = useSelector(state => state.wallet);\r\n\r\n    return (\r\n        <>\r\n            {currency.length ?\r\n                <Table borderless hover responsive=\"sm\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Count</th>\r\n                        <th>Summary</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {currency.map((item, index) =>\r\n                        <ItemTableWalletCurrency key={index} currency={item} index={index + 1}/>)\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n                :\r\n                <p className=\"centeredRows\">No currency</p>}\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default TableWalletCurrency;","import React from 'react';\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport TableWalletCurrency from \"./components/TableWalletCurrency.component\";\r\nimport {setIsOpenWallet} from \"../../store/walletReducer\";\r\n\r\nconst Wallet = () => {\r\n    const {isOpenWallet} = useSelector(state => state.wallet);\r\n    const dispatch = useDispatch();\r\n\r\n    const closeWallet = () => {\r\n        dispatch(setIsOpenWallet(false));\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={isOpenWallet}\r\n            onHide={closeWallet}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\"  className=\" centeredBlock\">\r\n                    List of my currency\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <TableWalletCurrency />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={closeWallet} >Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default Wallet;","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, FormControl, InputGroup, Modal} from \"react-bootstrap\";\r\nimport {addCurrency, setIsOpenAddingWallet} from \"../../../store/walletReducer\";\r\nimport {roundSeparateNumber} from \"../../../common/utils\";\r\n\r\nconst AddingCurrency = () => {\r\n    const {isOpenAddingWallet, addedCurrency} = useSelector(state => state.wallet);\r\n    const dispatch = useDispatch();\r\n    const [count, setCount] = useState(0.01);\r\n\r\n    const closeWallet = () => {\r\n        dispatch(setIsOpenAddingWallet(false));\r\n    };\r\n\r\n    const addToWallet = () => {\r\n        if (count > 0) {\r\n            const newCurrencyItem = {\r\n                id: addedCurrency.id,\r\n                name: addedCurrency.name,\r\n                price: addedCurrency.priceUsd,\r\n                count: count,\r\n                summary: addedCurrency.priceUsd * count,\r\n            };\r\n            dispatch(addCurrency(newCurrencyItem));\r\n\r\n            closeWallet();\r\n        } else setCount(0)\r\n    };\r\n\r\n    const checkValue = (e) => {\r\n        if (Number(e.target.value) >= 0 )  setCount(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={isOpenAddingWallet}\r\n            onHide={closeWallet}\r\n            size=\"sm\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add to the wallet</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"centeredRows\">\r\n                <h4>{addedCurrency.name} - ${roundSeparateNumber(addedCurrency.priceUsd)}</h4>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"basic-addon1\">Count: </InputGroup.Text>\r\n                    <FormControl\r\n                        placeholder=\"Count of currency\"\r\n                        aria-label=\"Count\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                        value={count}\r\n                        // onkeyup={() => checkValue()}\r\n                        onChange={checkValue}\r\n                    />\r\n                </InputGroup>\r\n                <p>The count must be a positive number greater than zero </p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={addToWallet}>\r\n                    Save Changes\r\n                </Button>\r\n                <Button variant=\"secondary\" onClick={closeWallet}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default AddingCurrency;","import React from 'react';\r\nimport {CartesianGrid, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\n\r\nconst Chart = ({assets24h, min, max}) => {\r\n    const formatYAxis = (tickItem) => Number(tickItem).toFixed(2);\r\n\r\n    const formatXAxis = (tickItem) => {\r\n        const hour = (new Date(tickItem)).getHours();\r\n        return `${hour}h`;\r\n    };\r\n\r\n    assets24h.forEach((item) => {\r\n         item.priceUsd = formatYAxis(item.priceUsd);\r\n    });\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart\r\n                data={assets24h}\r\n                margin={{top: 5, bottom: 5}}\r\n                useInteractiveGuideline={true}\r\n            >\r\n                <XAxis dataKey=\"date\" tickFormatter={formatXAxis}/>\r\n                <YAxis showMaxMin={false} tickCount={20} tickFormatter={formatYAxis} type=\"number\"\r\n                       domain={[min, max]}/>\r\n                <Tooltip/>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <Line activeDot={{r: 8}} type=\"monotone\" dataKey=\"priceUsd\" tickFormatter={formatYAxis} stroke=\"#ff7300\"/>\r\n                />\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    )\r\n};\r\n\r\nexport default Chart;","import React, {useEffect} from 'react';\r\nimport {getDateTime, roundSeparateNumber} from \"../../common/utils\";\r\nimport Chart from \"../main/components/Chart.component\";\r\nimport Loader from \"../main/components/Loader.component\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport { getCurrentCripto} from \"../../common/fetch\";\r\nimport {Badge, Button} from \"react-bootstrap\";\r\nimport {addCurrentCurrency, setIsOpenAddingWallet} from \"../../store/walletReducer\";\r\n\r\nconst CurrencyPage = () => {\r\n        const {allAssets} = useSelector(state => state.assets);\r\n        const {assets24h, details} = useSelector(state => state.details);\r\n        const {now, startDay, start24h, date} = getDateTime();\r\n        const {id} = useParams();\r\n        const dispatch = useDispatch();\r\n        const getAsset = () => {\r\n            return allAssets.find((item) => item.id === id);\r\n        };\r\n\r\n        const asset = getAsset();\r\n\r\n        useEffect(() => {\r\n            let interval1 = 0;\r\n            let interval2 = 0;\r\n            if(allAssets.length) {\r\n                 interval2 = setInterval(() => dispatch(getCurrentCripto(asset.id, start24h.getTime(), now.getTime())), 2000);\r\n                 interval1 = setInterval(() => dispatch(getCurrentCripto(asset.id, startDay, now.getTime(), true)), 2000);\r\n            }\r\n            return () => {\r\n                clearInterval(interval1);\r\n                clearInterval(interval2);\r\n            };\r\n        }, [id, allAssets]);\r\n\r\n        // useEffect(() => {\r\n        //     const interval = setInterval(() => dispatch(getAllCripto()), 2000);\r\n        //     return () => clearInterval(interval);\r\n        // }, []);\r\n\r\n        const openAddToWallet = () => {\r\n            dispatch(setIsOpenAddingWallet(true));\r\n            dispatch(addCurrentCurrency(asset));\r\n        };\r\n\r\n        return (\r\n            <div className=\"card__wrapper\">\r\n                {Object.keys(details).length  ?\r\n                    <div className=\"card__content\">\r\n                        <div className=\"card__info\">\r\n                            <img\r\n                                src={`https://assets.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`}\r\n                                alt=\"currency\"\r\n                                className=\"card__img\"/>\r\n                            <div className=\"card__data\">\r\n                                <span> {asset.name} ({asset.symbol})</span>\r\n                                <span>{date}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card__data\">\r\n                            <span>HIGH: ${roundSeparateNumber(details.max)}</span>\r\n                            <span>LOW: ${roundSeparateNumber(details.min)}</span>\r\n                            <span>AVERAGE: ${roundSeparateNumber(details.average)}</span>\r\n                        </div>\r\n                        <div className=\"card__data\">\r\n                            <span className=\"button button__add\"><Badge bg=\"info\" onClick={openAddToWallet}>+</Badge></span>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <Loader/>\r\n                }\r\n                <Chart assets24h={assets24h} max={details.max} min={details.min}/>\r\n                <Link to='/'>\r\n                    <div className=\"centeredBlock\"><Button>Back</Button></div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n;\r\n\r\nexport default CurrencyPage;","import '../../sass/abstracts/_variables.scss';\r\nimport Main from \"../main/Main.component\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from \"../header/Header.component\";\r\nimport React from \"react\";\r\nimport Wallet from \"../wallet/Wallet.component\";\r\nimport AddingCurrency from \"../main/components/AddingCurrency.component\";\r\nimport {BrowserRouter as Router, HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport CurrencyPage from \"../currencyPage/CurrencyPage.component\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst App = () => {\r\n    const {assets} = useSelector(state => state.assets);\r\n\r\n    return (\r\n        <HashRouter basename=\"/cripto\" >\r\n            <Header/>\r\n            <Wallet/>\r\n            <AddingCurrency/>\r\n            <Switch>\r\n                {assets.map((item) => (\r\n                    <Route\r\n                        key={item.id}\r\n                        path={\"/currency/:id\"}\r\n                        render={() => <CurrencyPage/>}\r\n                    />\r\n                ))}\r\n                <Route path=\"/\">\r\n                    <Main/>\r\n                </Route>\r\n            </Switch>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import assetReducer from \"./assetReducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport detailsReducer from \"./detailsReducer\";\r\nimport walletReducer from \"./walletReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n\tassets: assetReducer,\r\n\tdetails: detailsReducer,\r\n\twallet: walletReducer,\r\n});\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './sass/index.scss';\r\nimport App from './components/app/App';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}